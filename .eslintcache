[{"E:\\WEB\\E-commerce\\client\\src\\index.js":"1","E:\\WEB\\E-commerce\\client\\src\\reportWebVitals.js":"2","E:\\WEB\\E-commerce\\client\\src\\App.js":"3","E:\\WEB\\E-commerce\\client\\src\\reducers\\index.js":"4","E:\\WEB\\E-commerce\\client\\src\\firebase.js":"5","E:\\WEB\\E-commerce\\client\\src\\Login.js":"6","E:\\WEB\\E-commerce\\client\\src\\Home.js":"7","E:\\WEB\\E-commerce\\client\\src\\RegisterComp.js":"8","E:\\WEB\\E-commerce\\client\\src\\Register.js":"9","E:\\WEB\\E-commerce\\client\\src\\ForgotPassword.js":"10","E:\\WEB\\E-commerce\\client\\src\\Header.js":"11","E:\\WEB\\E-commerce\\client\\src\\reducers\\userReducer.js":"12","E:\\WEB\\E-commerce\\client\\src\\functions\\auth.js":"13","E:\\WEB\\E-commerce\\client\\src\\user\\History.js":"14","E:\\WEB\\E-commerce\\client\\src\\components\\routes\\userRoute.js":"15","E:\\WEB\\E-commerce\\client\\src\\components\\routes\\UserRoute.js":"16","E:\\WEB\\E-commerce\\client\\src\\components\\routes\\LoadingToRedirect.js":"17","E:\\WEB\\E-commerce\\client\\src\\components\\routes\\Nav\\UserNav.js":"18","E:\\WEB\\E-commerce\\client\\src\\user\\Password.js":"19","E:\\WEB\\E-commerce\\client\\src\\user\\Wishlist.js":"20","E:\\WEB\\E-commerce\\client\\src\\admin\\Admindashboard.js":"21","E:\\WEB\\E-commerce\\client\\src\\components\\routes\\adminRoute.js":"22","E:\\WEB\\E-commerce\\client\\src\\components\\routes\\AdminRoute.js":"23","E:\\WEB\\E-commerce\\client\\src\\components\\routes\\Nav\\AdminNav.js":"24","E:\\WEB\\E-commerce\\client\\src\\admin\\category\\CategoryCreate.js":"25","E:\\WEB\\E-commerce\\client\\src\\functions\\category.js":"26","E:\\WEB\\E-commerce\\client\\src\\admin\\category\\CategoryUpdate.js":"27","E:\\WEB\\E-commerce\\client\\src\\components\\forms\\CategoryForm.js":"28","E:\\WEB\\E-commerce\\client\\src\\components\\forms\\LocalSearch.js":"29","E:\\WEB\\E-commerce\\client\\src\\admin\\sub\\SubCreate.js":"30","E:\\WEB\\E-commerce\\client\\src\\functions\\sub.js":"31","E:\\WEB\\E-commerce\\client\\src\\admin\\sub\\SubUpdate.js":"32","E:\\WEB\\E-commerce\\client\\src\\admin\\product\\ProductCreate.js":"33","E:\\WEB\\E-commerce\\client\\src\\functions\\product.js":"34","E:\\WEB\\E-commerce\\client\\src\\components\\forms\\ProductCreateForm.js":"35","E:\\WEB\\E-commerce\\client\\src\\components\\forms\\FileUpload.js":"36","E:\\WEB\\E-commerce\\client\\src\\components\\cards\\AdminProductCard.js":"37","E:\\WEB\\E-commerce\\client\\src\\admin\\product\\AllProducts.js":"38","E:\\WEB\\E-commerce\\client\\src\\admin\\product\\ProductUpdate.js":"39","E:\\WEB\\E-commerce\\client\\src\\components\\forms\\ProductUpdateForm.js":"40","E:\\WEB\\E-commerce\\client\\src\\components\\cards\\ProductCard.js":"41","E:\\WEB\\E-commerce\\client\\src\\components\\cards\\Jumbotron.js":"42","E:\\WEB\\E-commerce\\client\\src\\components\\cards\\LoadingCard.js":"43","E:\\WEB\\E-commerce\\client\\src\\components\\home\\NewArrivals.js":"44","E:\\WEB\\E-commerce\\client\\src\\components\\home\\BestSellers.js":"45","E:\\WEB\\E-commerce\\client\\src\\admin\\product\\Product.js":"46","E:\\WEB\\E-commerce\\client\\src\\components\\cards\\SingleProduct.js":"47","E:\\WEB\\E-commerce\\client\\src\\components\\cards\\ProductListItems.js":"48","E:\\WEB\\E-commerce\\client\\src\\components\\modal\\RatingModal.js":"49","E:\\WEB\\E-commerce\\client\\src\\functions\\rating.js":"50","E:\\WEB\\E-commerce\\client\\src\\components\\category\\CategoryList.js":"51","E:\\WEB\\E-commerce\\client\\src\\admin\\category\\CategoryHome.js":"52","E:\\WEB\\E-commerce\\client\\src\\components\\sub\\SubList.js":"53","E:\\WEB\\E-commerce\\client\\src\\admin\\sub\\SubHome.js":"54","E:\\WEB\\E-commerce\\client\\src\\reducers\\searchReducer.js":"55","E:\\WEB\\E-commerce\\client\\src\\components\\forms\\Search.js":"56","E:\\WEB\\E-commerce\\client\\src\\components\\home\\Shop.js":"57","E:\\WEB\\E-commerce\\client\\src\\components\\forms\\Star.js":"58","E:\\WEB\\E-commerce\\client\\src\\reducers\\cartReducer.js":"59","E:\\WEB\\E-commerce\\client\\src\\admin\\product\\Cart.js":"60","E:\\WEB\\E-commerce\\client\\src\\components\\cards\\ProductCardInCheckout.js":"61","E:\\WEB\\E-commerce\\client\\src\\reducers\\drawerReducer.js":"62","E:\\WEB\\E-commerce\\client\\src\\components\\drawer\\SideDrawer.js":"63","E:\\WEB\\E-commerce\\client\\src\\admin\\product\\Checkout.js":"64","E:\\WEB\\E-commerce\\client\\src\\functions\\user.js":"65","E:\\WEB\\E-commerce\\client\\src\\admin\\coupan\\CreateCoupanPage.js":"66","E:\\WEB\\E-commerce\\client\\src\\functions\\coupan.js":"67","E:\\WEB\\E-commerce\\client\\src\\reducers\\couponReducer.js":"68","E:\\WEB\\E-commerce\\client\\src\\Payment.js":"69","E:\\WEB\\E-commerce\\client\\src\\components\\StripeCheckout.js":"70","E:\\WEB\\E-commerce\\client\\src\\functions\\stripe.js":"71","E:\\WEB\\E-commerce\\client\\src\\components\\cards\\ShowPaymentInfo.js":"72","E:\\WEB\\E-commerce\\client\\src\\components\\order\\Invoice.js":"73","E:\\WEB\\E-commerce\\client\\src\\functions\\admin.js":"74","E:\\WEB\\E-commerce\\client\\src\\components\\order\\Orders.js":"75","E:\\WEB\\E-commerce\\client\\src\\reducers\\CODReducer.js":"76"},{"size":832,"mtime":1607685068786,"results":"77","hashOfConfig":"78"},{"size":362,"mtime":499162500000,"results":"79","hashOfConfig":"78"},{"size":5780,"mtime":1622269238132,"results":"80","hashOfConfig":"78"},{"size":554,"mtime":1622256959013,"results":"81","hashOfConfig":"78"},{"size":533,"mtime":1607599286217,"results":"82","hashOfConfig":"78"},{"size":4803,"mtime":1615197557288,"results":"83","hashOfConfig":"78"},{"size":1155,"mtime":1615540268501,"results":"84","hashOfConfig":"78"},{"size":2905,"mtime":1609949636983,"results":"85","hashOfConfig":"78"},{"size":1576,"mtime":1609949448228,"results":"86","hashOfConfig":"78"},{"size":1583,"mtime":1609949596620,"results":"87","hashOfConfig":"78"},{"size":2666,"mtime":1619694433360,"results":"88","hashOfConfig":"78"},{"size":230,"mtime":1607685018769,"results":"89","hashOfConfig":"78"},{"size":756,"mtime":1609944455714,"results":"90","hashOfConfig":"78"},{"size":2925,"mtime":1622262094260,"results":"91","hashOfConfig":"78"},{"size":438,"mtime":1609758197098,"results":"92","hashOfConfig":"78"},{"size":390,"mtime":1609946121584,"results":"93","hashOfConfig":"78"},{"size":721,"mtime":1609949682799,"results":"94","hashOfConfig":"78"},{"size":618,"mtime":1609760201526,"results":"95","hashOfConfig":"78"},{"size":1878,"mtime":1609837567831,"results":"96","hashOfConfig":"78"},{"size":1498,"mtime":1622209025096,"results":"97","hashOfConfig":"78"},{"size":1325,"mtime":1622203106456,"results":"98","hashOfConfig":"78"},{"size":876,"mtime":1609945492919,"results":"99","hashOfConfig":"78"},{"size":828,"mtime":1609946082347,"results":"100","hashOfConfig":"78"},{"size":1191,"mtime":1619952945483,"results":"101","hashOfConfig":"78"},{"size":3755,"mtime":1610182625621,"results":"102","hashOfConfig":"78"},{"size":1016,"mtime":1615540925606,"results":"103","hashOfConfig":"78"},{"size":1858,"mtime":1610091456024,"results":"104","hashOfConfig":"78"},{"size":513,"mtime":1610091248185,"results":"105","hashOfConfig":"78"},{"size":418,"mtime":1610093523524,"results":"106","hashOfConfig":"78"},{"size":4515,"mtime":1610274370530,"results":"107","hashOfConfig":"78"},{"size":822,"mtime":1610096598101,"results":"108","hashOfConfig":"78"},{"size":3223,"mtime":1610120739733,"results":"109","hashOfConfig":"78"},{"size":3488,"mtime":1612334957089,"results":"110","hashOfConfig":"78"},{"size":1590,"mtime":1616240199257,"results":"111","hashOfConfig":"78"},{"size":3791,"mtime":1610291542045,"results":"112","hashOfConfig":"78"},{"size":3302,"mtime":1612512688395,"results":"113","hashOfConfig":"78"},{"size":1057,"mtime":1612335185526,"results":"114","hashOfConfig":"78"},{"size":2112,"mtime":1610811112828,"results":"115","hashOfConfig":"78"},{"size":4872,"mtime":1612514452063,"results":"116","hashOfConfig":"78"},{"size":3850,"mtime":1612511271269,"results":"117","hashOfConfig":"78"},{"size":2731,"mtime":1622169752052,"results":"118","hashOfConfig":"78"},{"size":293,"mtime":1612610723267,"results":"119","hashOfConfig":"78"},{"size":498,"mtime":1616240687301,"results":"120","hashOfConfig":"78"},{"size":2130,"mtime":1614228364313,"results":"121","hashOfConfig":"78"},{"size":2123,"mtime":1614228664710,"results":"122","hashOfConfig":"78"},{"size":2227,"mtime":1615207408542,"results":"123","hashOfConfig":"78"},{"size":4155,"mtime":1622208149141,"results":"124","hashOfConfig":"78"},{"size":2149,"mtime":1614940024159,"results":"125","hashOfConfig":"78"},{"size":1282,"mtime":1615197188128,"results":"126","hashOfConfig":"78"},{"size":944,"mtime":1615203331817,"results":"127","hashOfConfig":"78"},{"size":939,"mtime":1615304099175,"results":"128","hashOfConfig":"78"},{"size":1495,"mtime":1615539442388,"results":"129","hashOfConfig":"78"},{"size":875,"mtime":1615541139566,"results":"130","hashOfConfig":"78"},{"size":1392,"mtime":1615541656376,"results":"131","hashOfConfig":"78"},{"size":207,"mtime":1615547141067,"results":"132","hashOfConfig":"78"},{"size":995,"mtime":1615548829231,"results":"133","hashOfConfig":"78"},{"size":11428,"mtime":1619889404149,"results":"134","hashOfConfig":"78"},{"size":405,"mtime":1618049486129,"results":"135","hashOfConfig":"78"},{"size":441,"mtime":1619691888662,"results":"136","hashOfConfig":"78"},{"size":3660,"mtime":1622257107013,"results":"137","hashOfConfig":"78"},{"size":3962,"mtime":1619779024904,"results":"138","hashOfConfig":"78"},{"size":184,"mtime":1619790815673,"results":"139","hashOfConfig":"78"},{"size":1809,"mtime":1619795502003,"results":"140","hashOfConfig":"78"},{"size":6100,"mtime":1622261854509,"results":"141","hashOfConfig":"78"},{"size":2271,"mtime":1622260593711,"results":"142","hashOfConfig":"78"},{"size":4424,"mtime":1622127750511,"results":"143","hashOfConfig":"78"},{"size":525,"mtime":1619934562423,"results":"144","hashOfConfig":"78"},{"size":187,"mtime":1619955672475,"results":"145","hashOfConfig":"78"},{"size":699,"mtime":1622093364647,"results":"146","hashOfConfig":"78"},{"size":5518,"mtime":1622126557516,"results":"147","hashOfConfig":"78"},{"size":263,"mtime":1622117747867,"results":"148","hashOfConfig":"78"},{"size":901,"mtime":1622203013325,"results":"149","hashOfConfig":"78"},{"size":2864,"mtime":1622199028336,"results":"150","hashOfConfig":"78"},{"size":441,"mtime":1622201078863,"results":"151","hashOfConfig":"78"},{"size":2521,"mtime":1622262424908,"results":"152","hashOfConfig":"78"},{"size":173,"mtime":1622256906714,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"1ttwc6m",{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"156"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"156"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"156"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"156"},{"filePath":"201","messages":"202","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"156"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"156"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"156"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"156"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"156"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"156"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"156"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"156"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"156"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"156"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"156"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"156"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"156"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"156"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"156"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"156"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"156"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"156"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"156"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"156"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"156"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"156"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"156"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"156"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"E:\\WEB\\E-commerce\\client\\src\\index.js",[],["335","336"],"E:\\WEB\\E-commerce\\client\\src\\reportWebVitals.js",[],"E:\\WEB\\E-commerce\\client\\src\\App.js",[],"E:\\WEB\\E-commerce\\client\\src\\reducers\\index.js",[],"E:\\WEB\\E-commerce\\client\\src\\firebase.js",[],"E:\\WEB\\E-commerce\\client\\src\\Login.js",[],"E:\\WEB\\E-commerce\\client\\src\\Home.js",[],"E:\\WEB\\E-commerce\\client\\src\\RegisterComp.js",[],"E:\\WEB\\E-commerce\\client\\src\\Register.js",[],"E:\\WEB\\E-commerce\\client\\src\\ForgotPassword.js",[],"E:\\WEB\\E-commerce\\client\\src\\Header.js",["337"],"import React, { useState } from \"react\";\r\nimport { Menu, Badge } from \"antd\";\r\nimport {\r\n  AppstoreOutlined,\r\n  SettingOutlined,\r\n  UserOutlined,\r\n  UserAddOutlined,\r\n  LogoutOutlined,\r\n  ShopOutlined,\r\n  ShoppingOutlined,\r\n  ShoppingCartOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Search from \"./components/forms/Search\";\r\n\r\nconst { SubMenu, Item } = Menu;\r\nfunction Header() {\r\n  const [current, setCurrent] = useState(\"home\");\r\n\r\n  let dispatch = useDispatch();\r\n  let { user, cart } = useSelector((state) => ({ ...state }));\r\n  let history = useHistory();\r\n\r\n  const handleClick = (e) => {\r\n    //\r\n    setCurrent(e.key);\r\n  };\r\n\r\n  const logout = () => {\r\n    firebase.auth().signOut();\r\n    dispatch({\r\n      type: \"LOGOUT\",\r\n      payload: null,\r\n    });\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n      <Item key=\"home\" icon={<AppstoreOutlined />}>\r\n        <Link to=\"/\">Home </Link>\r\n      </Item>\r\n\r\n      <Item key=\"shop\" icon={<ShoppingOutlined />}>\r\n        <Link to=\"/shop\">Shop </Link>\r\n      </Item>\r\n\r\n      <Item key=\"cart\" icon={<ShoppingCartOutlined />}>\r\n        <Link to=\"/cart\">\r\n          <Badge count={cart.length} offset={[9, 0]}>\r\n            Cart\r\n          </Badge>\r\n        </Link>\r\n      </Item>\r\n\r\n      {!user && (\r\n        <Item key=\"register\" icon={<UserAddOutlined />} className=\"float-right\">\r\n          <Link to=\"/register\">Register</Link>\r\n        </Item>\r\n      )}\r\n      {!user && (\r\n        <Item key=\"login\" icon={<UserOutlined />} className=\"float-right\">\r\n          <Link to=\"/login\">Login</Link>\r\n        </Item>\r\n      )}\r\n      {user && (\r\n        <SubMenu\r\n          key=\"SubMenu\"\r\n          icon={<SettingOutlined />}\r\n          title={user.email && user.email.split(\"@\")[0]}\r\n          className=\"float-right\"\r\n        >\r\n          {user && user.role === \"subscriber\" && (\r\n            <Item>\r\n              <Link to=\"/user/history\">Dashboard</Link>\r\n            </Item>\r\n          )}\r\n          {user && user.role === \"admin\" && (\r\n            <Item>\r\n              <Link to=\"/admin/dashboard\">Dashboard</Link>\r\n            </Item>\r\n          )}\r\n          {/* the above codes will check the role and then redirect to pages*/}\r\n          <Item icon={<LogoutOutlined />} onClick={logout}>\r\n            Logut\r\n          </Item>\r\n        </SubMenu>\r\n      )}\r\n      <span className=\"float-right p-1\">\r\n        <Search />\r\n      </span>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","E:\\WEB\\E-commerce\\client\\src\\reducers\\userReducer.js",[],"E:\\WEB\\E-commerce\\client\\src\\functions\\auth.js",[],"E:\\WEB\\E-commerce\\client\\src\\user\\History.js",["338","339","340","341"],"import React, { useEffect, useState } from \"react\";\r\nimport UserNav from \"../components/routes/Nav/UserNav\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getUserOrders } from \"../functions/user\";\r\nimport ShowPaymentInfo from \"../components/cards/ShowPaymentInfo\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\nimport Invoice from \"../components/order/Invoice\";\r\n\r\nconst History = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadUserOrders();\r\n  }, []);\r\n\r\n  const loadUserOrders = () =>\r\n    getUserOrders(user.token).then((res) => {\r\n      console.log(JSON.stringify(res.data, null, 4));\r\n      setOrders(res.data);\r\n    });\r\n\r\n  const showOrderInTable = (order) => (\r\n    <table className=\"table table-bordered\">\r\n      <thead className=\"thead-light\">\r\n        <tr>\r\n          <th scope=\"col\">Title</th>\r\n          <th scope=\"col\">Price</th>\r\n          <th scope=\"col\">Brand</th>\r\n          <th scope=\"col\">Color</th>\r\n          <th scope=\"col\">Count</th>\r\n          <th scope=\"col\">Shipping</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {order.products.map((p, i) => (\r\n          <tr key={i}>\r\n            <td>\r\n              <b>{p.product.title}</b>\r\n            </td>\r\n            <td>{p.product.price}</td>\r\n            <td>{p.product.brand}</td>\r\n            <td>{p.color}</td>\r\n            <td>{p.count}</td>\r\n            <td>\r\n              {p.product.shipping === \"Yes\" ? (\r\n                <CheckCircleOutlined style={{ color: \"green\" }} />\r\n              ) : (\r\n                <CloseCircleOutlined style={{ color: \"red\" }} />\r\n              )}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n\r\n  const showDownloadLink = (order) => (\r\n    <PDFDownloadLink\r\n      // document={<Invoice order={order} />}\r\n      fileName=\"invoice.pdf\"\r\n      className=\"btn btn-sm btn-block btn-outline-primary\"\r\n    >\r\n      Download PDF\r\n    </PDFDownloadLink>\r\n  );\r\n\r\n  const showEachOrders = () =>\r\n    orders.reverse().map((order, i) => (\r\n      <div key={i} className=\"m-5 p-3 card\">\r\n        <ShowPaymentInfo order={order} />\r\n        {showOrderInTable(order)}\r\n        <div className=\"row\">\r\n          <div className=\"col\">{showDownloadLink(order)}</div>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <UserNav />\r\n        </div>\r\n        <div className=\"col text-center\">\r\n          <h4>\r\n            {orders.length > 0 ? \"User purchase orders\" : \"No purchase orders\"}\r\n          </h4>\r\n          {showEachOrders()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","E:\\WEB\\E-commerce\\client\\src\\components\\routes\\userRoute.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\routes\\UserRoute.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\routes\\LoadingToRedirect.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\routes\\Nav\\UserNav.js",[],"E:\\WEB\\E-commerce\\client\\src\\user\\Password.js",[],"E:\\WEB\\E-commerce\\client\\src\\user\\Wishlist.js",["342","343"],"import React, { useEffect, useState } from \"react\";\r\nimport UserNav from \"../components/routes/Nav/UserNav\";\r\nimport { getWishlist, removeWishlist } from \"../functions/user\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nconst Wishlist = () => {\r\n  const [wishlist, setWishlist] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadWishlist();\r\n  }, []);\r\n\r\n  const loadWishlist = () =>\r\n    getWishlist(user.token).then((res) => {\r\n      setWishlist(res.data.wishlist);\r\n    });\r\n\r\n  const handleRemove = (productId) =>\r\n    removeWishlist(productId, user.token).then((res) => {\r\n      loadWishlist();\r\n    });\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <UserNav />\r\n        </div>\r\n        <div className=\"col\">\r\n          <h4>Wishlist</h4>\r\n\r\n          {wishlist.map((p) => (\r\n            <div key={p._id} className=\"alert alert-secondary\">\r\n              <Link to={`/product/${p.slug}`}>{p.title}</Link>\r\n              <span\r\n                onClick={() => handleRemove(p._id)}\r\n                className=\"btn btn-sm float-right\"\r\n              >\r\n                <DeleteOutlined className=\"text-danger\" />\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Wishlist;\r\n","E:\\WEB\\E-commerce\\client\\src\\admin\\Admindashboard.js",["344","345"],"import React, { useEffect, useState } from \"react\";\r\nimport AdminNav from \"../components/routes/Nav/AdminNav\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { changeStauts, getOrders } from \"../functions/admin\";\r\nimport Orders from \"../components/order/Orders\";\r\nconst Admindashboard = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadOrders();\r\n  }, []);\r\n\r\n  const loadOrders = () =>\r\n    getOrders(user.token).then((res) => {\r\n      console.log(JSON.stringify(res.data, null, 4));\r\n      setOrders(res.data);\r\n    });\r\n\r\n  const handleStatusChange = (orderId, orderStatus) => {\r\n    changeStauts(orderId, orderStatus, user.token).then((res) => {\r\n      toast.success(\"Status updated\");\r\n      loadOrders();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n\r\n        <div className=\"col-md-10\">\r\n          <h4>Admin Dashboard</h4>\r\n          {/* {JSON.stringify(orders)} */}\r\n\r\n          <Orders orders={orders} handleStatusChange={handleStatusChange} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admindashboard;\r\n","E:\\WEB\\E-commerce\\client\\src\\components\\routes\\adminRoute.js",["346","347","348"],"E:\\WEB\\E-commerce\\client\\src\\components\\routes\\AdminRoute.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\routes\\Nav\\AdminNav.js",[],"E:\\WEB\\E-commerce\\client\\src\\admin\\category\\CategoryCreate.js",["349","350"],"import { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport CategoryForm from \"../../components/forms/CategoryForm\";\r\nimport LocalSearch from \"../../components/forms/LocalSearch\";\r\nimport AdminNav from \"../../components/routes/Nav/AdminNav\";\r\nimport {\r\n  createCategory,\r\n  getCategories,\r\n  removeCategory,\r\n} from \"../../functions/category\";\r\n\r\nfunction CategoryCreate() {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  // Step 1 for searching and filtering\r\n\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const loadCategories = () =>\r\n    getCategories().then((c) => setCategories(c.data));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    createCategory({ name }, user.token)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setName(\"\");\r\n        toast.success(`\"${res.data.name}\"is created`);\r\n        loadCategories();\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        if (err.response.status === 400) toast.error(err.response.data);\r\n      });\r\n  };\r\n  /* Above function is used to create categories*/\r\n\r\n  const handleRemove = async (slug) => {\r\n    if (window.confirm(\"Delete?\")) {\r\n      setLoading(true);\r\n      removeCategory(slug, user.token)\r\n        .then((res) => {\r\n          setLoading(false);\r\n          toast.error(`${res.data.name} deleted`);\r\n          loadCategories();\r\n        })\r\n        .catch((err) => {\r\n          if (err.response.status === 400) {\r\n            toast.error(err.response.data);\r\n          }\r\n        });\r\n    }\r\n  };\r\n  {\r\n    /* Step 3 for search and filtering*/\r\n  }\r\n\r\n  {\r\n    /* Step 4 for search and filtering */\r\n  }\r\n\r\n  const searched = (keyword) => (c) => c.name.toLowerCase().includes(keyword);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2\">\r\n            <AdminNav />\r\n          </div>\r\n          <div className=\"col\">\r\n            {loading ? (\r\n              <h4 className=\"red-danger\">Loading...</h4>\r\n            ) : (\r\n              <h4>Create Category</h4>\r\n            )}\r\n            <CategoryForm\r\n              handleSubmit={handleSubmit}\r\n              name={name}\r\n              setName={setName}\r\n            />\r\n            {/* Props passed*/}\r\n\r\n            {/*  Step 2 and 3 moved to localsearch */}\r\n\r\n            <LocalSearch keyword={keyword} setKeyword={setKeyword} />\r\n\r\n            {/*  Step 5 for search and filtering */}\r\n            {categories.filter(searched(keyword)).map((c) => (\r\n              <div className=\"alert alert-secondary\" key={c._id}>\r\n                {c.name} {\"\"}\r\n                <span\r\n                  onClick={() => handleRemove(c.slug)}\r\n                  className=\"btn btn-sm float-right\"\r\n                >\r\n                  <DeleteOutlined className=\"text-danger\" />\r\n                </span>\r\n                {\"\"}\r\n                <Link to={`/admin/category/${c.slug}`}>\r\n                  <span className=\"btn btn-sm float-right\">\r\n                    <EditOutlined className=\"text-warning\" />\r\n                  </span>\r\n                </Link>\r\n              </div>\r\n            ))}\r\n            {/*the above code will map through categories and show them*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryCreate;\r\n","E:\\WEB\\E-commerce\\client\\src\\functions\\category.js",[],"E:\\WEB\\E-commerce\\client\\src\\admin\\category\\CategoryUpdate.js",["351"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport CategoryForm from \"../../components/forms/CategoryForm\";\r\nimport AdminNav from \"../../components/routes/Nav/AdminNav\";\r\nimport { getCategory, updateCategory } from \"../../functions/category\";\r\n\r\nfunction CategoryUpdate({ history, match }) {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadCategory();\r\n  }, []);\r\n\r\n  const loadCategory = () =>\r\n    getCategory(match.params.slug).then((c) => setName(c.data.name));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    updateCategory(match.params.slug, { name }, user.token)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setName(\"\");\r\n        toast.success(`\"${res.data.name}\"is updated`);\r\n        history.push(\"/admin/category\");\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        if (err.response.status === 400) toast.error(err.response.data);\r\n      });\r\n  };\r\n  /* Above function is used to create categories*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2\">\r\n            <AdminNav />\r\n          </div>\r\n          <div className=\"col\">\r\n            {loading ? (\r\n              <h4 className=\"red-danger\">Loading...</h4>\r\n            ) : (\r\n              <h4>Update Category</h4>\r\n            )}\r\n            <CategoryForm\r\n              handleSubmit={handleSubmit}\r\n              name={name}\r\n              setName={setName}\r\n            />\r\n            <hr />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryUpdate;\r\n","E:\\WEB\\E-commerce\\client\\src\\components\\forms\\CategoryForm.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\forms\\LocalSearch.js",[],"E:\\WEB\\E-commerce\\client\\src\\admin\\sub\\SubCreate.js",["352","353","354"],"import { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport CategoryForm from \"../../components/forms/CategoryForm\";\r\nimport LocalSearch from \"../../components/forms/LocalSearch\";\r\nimport AdminNav from \"../../components/routes/Nav/AdminNav\";\r\nimport { getCategories } from \"../../functions/category\";\r\nimport { createSub, getSub, removeSub, getSubs } from \"../../functions/sub\";\r\n\r\nfunction SubCreate() {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [category, setCategory] = useState(\"\");\r\n  const [subs, setSubs] = useState([]);\r\n  // Step 1 for searching and filtering\r\n\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    loadCategories();\r\n    loadSubs();\r\n  }, []);\r\n\r\n  const loadCategories = () =>\r\n    getCategories().then((c) => setCategories(c.data));\r\n\r\n  const loadSubs = () => getSubs().then((s) => setSubs(s.data));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    createSub({ name, parent: category }, user.token)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setName(\"\");\r\n        toast.success(`\"${res.data.name}\"is created`);\r\n        loadSubs();\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        if (err.response.status === 400) toast.error(err.response.data);\r\n      });\r\n  };\r\n  /* Above function is used to create categories*/\r\n\r\n  const handleRemove = async (slug) => {\r\n    if (window.confirm(\"Delete?\")) {\r\n      setLoading(true);\r\n      removeSub(slug, user.token)\r\n        .then((res) => {\r\n          setLoading(false);\r\n          toast.error(`${res.data.name} deleted`);\r\n          loadSubs();\r\n        })\r\n        .catch((err) => {\r\n          if (err.response.status === 400) {\r\n            toast.error(err.response.data);\r\n          }\r\n        });\r\n    }\r\n  };\r\n  {\r\n    /* Step 3 for search and filtering*/\r\n  }\r\n\r\n  {\r\n    /* Step 4 for search and filtering */\r\n  }\r\n\r\n  const searched = (keyword) => (c) => c.name.toLowerCase().includes(keyword);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2\">\r\n            <AdminNav />\r\n          </div>\r\n          <div className=\"col\">\r\n            {loading ? (\r\n              <h4 className=\"red-danger\">Loading...</h4>\r\n            ) : (\r\n              <h4>Create Sub Category</h4>\r\n            )}\r\n\r\n            {/*---------------------------- VERY IMPORTANT------------------------------*/}\r\n\r\n            <div className=\"form-group\">\r\n              <label>Parent Category</label>\r\n              <select\r\n                name=\"category\"\r\n                className=\"form-control\"\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              >\r\n                <option>Please Select </option>\r\n                {categories.length > 0 &&\r\n                  categories.map((c) => (\r\n                    <option key={c._id} value={c._id}>\r\n                      {\" \"}\r\n                      {c.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n\r\n            <CategoryForm\r\n              handleSubmit={handleSubmit}\r\n              name={name}\r\n              setName={setName}\r\n            />\r\n\r\n            <LocalSearch keyword={keyword} setKeyword={setKeyword} />\r\n\r\n            {subs.filter(searched(keyword)).map((s) => (\r\n              <div className=\"alert alert-secondary\" key={s._id}>\r\n                {s.name} {\"\"}\r\n                <span\r\n                  onClick={() => handleRemove(s.slug)}\r\n                  className=\"btn btn-sm float-right\"\r\n                >\r\n                  <DeleteOutlined className=\"text-danger\" />\r\n                </span>\r\n                {\"\"}\r\n                <Link to={`/admin/sub/${s.slug}`}>\r\n                  <span className=\"btn btn-sm float-right\">\r\n                    <EditOutlined className=\"text-warning\" />\r\n                  </span>\r\n                </Link>\r\n              </div>\r\n            ))}\r\n            {/*the above code will map through categories and show them*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubCreate;\r\n","E:\\WEB\\E-commerce\\client\\src\\functions\\sub.js",[],"E:\\WEB\\E-commerce\\client\\src\\admin\\sub\\SubUpdate.js",["355","356","357","358","359","360","361","362","363"],"import { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport CategoryForm from \"../../components/forms/CategoryForm\";\r\nimport LocalSearch from \"../../components/forms/LocalSearch\";\r\nimport AdminNav from \"../../components/routes/Nav/AdminNav\";\r\nimport { getCategories } from \"../../functions/category\";\r\nimport { createSub, getSub, removeSub, updateSub } from \"../../functions/sub\";\r\n\r\nfunction SubUpdate({ history, match }) {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [category, setCategory] = useState(\"\");\r\n  const [parent, setParent] = useState(\"\");\r\n  // Step 1 for searching and filtering\r\n\r\n  useEffect(() => {\r\n    loadCategories();\r\n    loadSub();\r\n  }, []);\r\n\r\n  const loadCategories = () =>\r\n    getCategories().then((c) => setCategories(c.data));\r\n\r\n  const loadSub = () =>\r\n    getSub(match.params.slug).then((s) => {\r\n      setName(s.data.name);\r\n      setParent(s.data.parent);\r\n    });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    updateSub(match.params.slug, { name, parent }, user.token)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setName(\"\");\r\n        toast.success(`\"${res.data.name}\"is updated`);\r\n        history.push(\"/admin/sub\");\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        if (err.response.status === 400) toast.error(err.response.data);\r\n      });\r\n  };\r\n  /* Above function is used to create categories*/\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2\">\r\n            <AdminNav />\r\n          </div>\r\n          <div className=\"col\">\r\n            {loading ? (\r\n              <h4 className=\"red-danger\">Loading...</h4>\r\n            ) : (\r\n              <h4>Update Sub Category</h4>\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              <label>Parent Category</label>\r\n              <select\r\n                name=\"category\"\r\n                className=\"form-control\"\r\n                onChange={(e) => setParent(e.target.value)}\r\n              >\r\n                <option>Please Select </option>\r\n                {categories.length > 0 &&\r\n                  categories.map((c) => (\r\n                    <option\r\n                      key={c._id}\r\n                      value={c._id}\r\n                      selected={c._id === parent}\r\n                    >\r\n                      {\" \"}\r\n                      {c.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n\r\n            <CategoryForm\r\n              handleSubmit={handleSubmit}\r\n              name={name}\r\n              setName={setName}\r\n            />\r\n\r\n            {/*the above code will map through categories and show them*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubUpdate;\r\n","E:\\WEB\\E-commerce\\client\\src\\admin\\product\\ProductCreate.js",["364"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport ProductCreateForm from \"../../components/forms/ProductCreateForm\";\r\nimport AdminNav from \"../../components/routes/Nav/AdminNav\";\r\nimport { createProduct } from \"../../functions/product\";\r\nimport { getCategories, getCategorySubs } from \"../../functions/category\";\r\nimport FileUpload from \"../../components/forms/FileUpload\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst initialState = {\r\n  title: \"Macbook Pro\",\r\n  description: \"This is the best Apple product\",\r\n  price: \"45000\",\r\n  categories: [],\r\n  category: \"\",\r\n  subs: [],\r\n  shipping: \"Yes\",\r\n  quantity: \"50\",\r\n  images: [],\r\n  colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\", \"Red\"],\r\n  brands: [\"Apple\", \"Samsung\", \"Microsoft\", \"Lenovo\", \"Asus\", \"Acer\"],\r\n  color: \"White\",\r\n  brand: \"Apple\",\r\n};\r\n\r\nconst ProductCreate = () => {\r\n  const [values, setValues] = useState(initialState);\r\n  const [subOptions, setSubOptions] = useState([]);\r\n  const [showSub, setShowSub] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  // redux\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const loadCategories = () =>\r\n    getCategories().then((c) => setValues({ ...values, categories: c.data }));\r\n\r\n  // destructure\r\n\r\n  /* --------------------- Very Important------------------*/\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProduct(values, user.token)\r\n      .then((res) => {\r\n        console.log(res);\r\n        window.alert(`\"${res.data.title}\"is created`);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        // if (err.response.status === 400) toast.error(err.response.data);\r\n        toast.error(err.response.data.err);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleCategoryChange = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Clicked Category\", e.target.value);\r\n    setValues({ ...values, subs: [], category: e.target.value });\r\n    getCategorySubs(e.target.value).then((res) => {\r\n      console.log(\"Sub Options on category click\", res);\r\n      setSubOptions(res.data);\r\n    });\r\n    setShowSub(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n\r\n        <div className=\"col-md-10\">\r\n          {loading ? (\r\n            <LoadingOutlined className=\"text-danger\" h1 />\r\n          ) : (\r\n            <h4>Create Product</h4>\r\n          )}\r\n\r\n          <hr />\r\n          {/* {JSON.stringify(values.categories)} */}\r\n          {/* {JSON.stringify(values.subs)} */}\r\n\r\n          <div className=\"p-3\">\r\n            <FileUpload\r\n              values={values}\r\n              setValues={setValues}\r\n              setLoading={setLoading}\r\n            />\r\n          </div>\r\n\r\n          <ProductCreateForm\r\n            handleSubmit={handleSubmit}\r\n            handleChange={handleChange}\r\n            setValues={setValues}\r\n            values={values}\r\n            handleCategoryChange={handleCategoryChange}\r\n            subOptions={subOptions}\r\n            showSub={showSub}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCreate;\r\n","E:\\WEB\\E-commerce\\client\\src\\functions\\product.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\forms\\ProductCreateForm.js",["365","366","367","368","369"],"import React from \"react\";\r\nimport { Select } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst ProductCreateForm = ({\r\n  handleSubmit,\r\n  handleChange,\r\n  setValues,\r\n  values,\r\n  handleCategoryChange,\r\n  subOptions,\r\n  showSub,\r\n}) => {\r\n  // destructure\r\n  const {\r\n    title,\r\n    description,\r\n    price,\r\n    categories,\r\n    category,\r\n    subs,\r\n    shipping,\r\n    quantity,\r\n    images,\r\n    colors,\r\n    brands,\r\n    color,\r\n    brand,\r\n  } = values;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label>Title</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          className=\"form-control\"\r\n          value={title}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Description</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          className=\"form-control\"\r\n          value={description}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Price</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"price\"\r\n          className=\"form-control\"\r\n          value={price}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Shipping</label>\r\n        <select\r\n          name=\"shipping\"\r\n          className=\"form-control\"\r\n          onChange={handleChange}\r\n        >\r\n          <option>Please select</option>\r\n          <option value=\"No\">No</option>\r\n          <option value=\"Yes\">Yes</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Quantity</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"quantity\"\r\n          className=\"form-control\"\r\n          value={quantity}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Color</label>\r\n        <select name=\"color\" className=\"form-control\" onChange={handleChange}>\r\n          <option>Please select</option>\r\n          {colors.map((c) => (\r\n            <option key={c} value={c}>\r\n              {c}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Brand</label>\r\n        <select name=\"brand\" className=\"form-control\" onChange={handleChange}>\r\n          <option>Please select</option>\r\n          {brands.map((b) => (\r\n            <option key={b} value={b}>\r\n              {b}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Category</label>\r\n        <select\r\n          name=\"category\"\r\n          className=\"form-control\"\r\n          onChange={handleCategoryChange}\r\n        >\r\n          <option>Please select</option>\r\n          {categories.length > 0 &&\r\n            categories.map((c) => (\r\n              <option key={c._id} value={c._id}>\r\n                {c.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n\r\n      {showSub && (\r\n        <div>\r\n          <label>Sub Categories</label>\r\n          <Select\r\n            mode=\"multiple\"\r\n            style={{ width: \"100%\" }}\r\n            placeholder=\"Please select\"\r\n            value={subs}\r\n            onChange={(value) => setValues({ ...values, subs: value })}\r\n          >\r\n            {subOptions.length &&\r\n              subOptions.map((s) => (\r\n                <Option key={s._id} value={s._id}>\r\n                  {s.name}\r\n                </Option>\r\n              ))}\r\n          </Select>\r\n        </div>\r\n      )}\r\n      <br />\r\n      <button className=\"btn btn-outline-info\">Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductCreateForm;\r\n","E:\\WEB\\E-commerce\\client\\src\\components\\forms\\FileUpload.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\cards\\AdminProductCard.js",["370"],"import React from \"react\";\r\nimport { Card } from \"antd\";\r\nimport laptop from \"../../Images/laptop.jpg\";\r\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Meta } = Card;\r\n\r\nconst AdminProductCard = ({ product, handleRemove }) => {\r\n  //destructure\r\n\r\n  const { title, description, images, slug } = product;\r\n\r\n  return (\r\n    <Card\r\n      cover={\r\n        <img\r\n          src={images && images.length ? images[0].url : laptop}\r\n          style={{ height: \"210px\", objectFit: \"cover\" }}\r\n          className=\"p-1\"\r\n        />\r\n      }\r\n      actions={[\r\n        <Link to={`/admin/product/${slug}`}>\r\n          <EditOutlined className=\"text-warning\" />\r\n        </Link>,\r\n\r\n        <DeleteOutlined\r\n          onClick={() => handleRemove(slug)}\r\n          className=\"text-danger\"\r\n        />,\r\n      ]}\r\n    >\r\n      <Meta\r\n        title={title}\r\n        description={`${description && description.substring(0, 40)}...`}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AdminProductCard;\r\n","E:\\WEB\\E-commerce\\client\\src\\admin\\product\\AllProducts.js",[],"E:\\WEB\\E-commerce\\client\\src\\admin\\product\\ProductUpdate.js",["371","372"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport AdminNav from \"../../components/routes/Nav/AdminNav\";\r\nimport { getProduct, updateProduct } from \"../../functions/product\";\r\nimport { getCategories, getCategorySubs } from \"../../functions/category\";\r\nimport FileUpload from \"../../components/forms/FileUpload\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport ProductUpdateForm from \"../../components/forms/ProductUpdateForm\";\r\n// import { useParams } from \"react-router-dom\";\r\n\r\nconst initialState = {\r\n  title: \"\",\r\n  description: \"\",\r\n  price: \"\",\r\n  category: \"\",\r\n  subs: [],\r\n  shipping: \"\",\r\n  quantity: \"\",\r\n  images: [],\r\n  colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"],\r\n  brands: [\"Apple\", \"Samsung\", \"Microsoft\", \"Lenovo\", \"ASUS\", \"ACER\"],\r\n  color: \"\",\r\n  brand: \"\",\r\n};\r\n\r\nconst ProductUpdate = ({ match, history }) => {\r\n  // state\r\n  const [values, setValues] = useState(initialState);\r\n  const [categories, setCategories] = useState([]);\r\n  const [subOptions, setSubOptions] = useState([]);\r\n  const [arrayOfSubs, setArrayOfSubs] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  // router\r\n  const { slug } = match.params;\r\n\r\n  useEffect(() => {\r\n    loadProduct();\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const loadProduct = () => {\r\n    getProduct(slug).then((p) => {\r\n      // console.log(\"single product\", p);\r\n      // 1 load single proudct\r\n      setValues({ ...values, ...p.data });\r\n      // 2 load single product category subs\r\n      getCategorySubs(p.data.category._id).then((res) => {\r\n        setSubOptions(res.data); // on first load, show default subs\r\n      });\r\n      // 3 prepare array of sub ids to show as default sub values in antd Select\r\n      let arr = [];\r\n      p.data.subs.map((s) => {\r\n        arr.push(s._id);\r\n      });\r\n      console.log(\"ARR\", arr);\r\n      setArrayOfSubs((prev) => arr); // required for ant design select to work\r\n    });\r\n  };\r\n\r\n  const loadCategories = () =>\r\n    getCategories().then((c) => {\r\n      console.log(\"GET CATEGORIES IN UPDATE PRODUCT\", c.data);\r\n      setCategories(c.data);\r\n    });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    values.subs = arrayOfSubs;\r\n    values.category = selectedCategory ? selectedCategory : values.category;\r\n\r\n    updateProduct(slug, values, user.token)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        toast.success(`\"${res.data.title}\"is updated`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n        toast.error(err.response.data.err);\r\n        history.push(\"/admin/products\");\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n    // console.log(e.target.name, \" ----- \", e.target.value);\r\n  };\r\n\r\n  const handleCatagoryChange = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"CLICKED CATEGORY\", e.target.value);\r\n    setValues({ ...values, subs: [] });\r\n\r\n    setSelectedCategory(e.target.value);\r\n\r\n    getCategorySubs(e.target.value).then((res) => {\r\n      console.log(\"SUB OPTIONS ON CATGORY CLICK\", res);\r\n      setSubOptions(res.data);\r\n    });\r\n\r\n    console.log(\"EXISTING CATEGORY values.category\", values.category);\r\n\r\n    // if user clicks back to the original category\r\n    // show its sub categories in default\r\n    if (values.category._id === e.target.value) {\r\n      loadProduct();\r\n    }\r\n    // clear old sub category ids\r\n    setArrayOfSubs([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n\r\n        <div className=\"col-md-10\">\r\n          {loading ? (\r\n            <LoadingOutlined className=\"text-danger\" h1 />\r\n          ) : (\r\n            <h4>Update Product</h4>\r\n          )}\r\n\r\n          {/* {JSON.stringify(values)} */}\r\n          <div className=\"p-3\">\r\n            <FileUpload\r\n              values={values}\r\n              setValues={setValues}\r\n              setLoading={setLoading}\r\n            />\r\n          </div>\r\n\r\n          <ProductUpdateForm\r\n            handleSubmit={handleSubmit}\r\n            handleChange={handleChange}\r\n            setValues={setValues}\r\n            values={values}\r\n            handleCatagoryChange={handleCatagoryChange}\r\n            categories={categories}\r\n            subOptions={subOptions}\r\n            arrayOfSubs={arrayOfSubs}\r\n            setArrayOfSubs={setArrayOfSubs}\r\n            selectedCategory={selectedCategory}\r\n          />\r\n          <hr />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductUpdate;\r\n","E:\\WEB\\E-commerce\\client\\src\\components\\forms\\ProductUpdateForm.js",["373","374"],"import React from \"react\";\r\nimport { Select } from \"antd\";\r\n\r\nconst { Option } = Select;\r\nconst ProductUpdateForm = ({\r\n  handleSubmit,\r\n  handleChange,\r\n  setValues,\r\n  values,\r\n  handleCatagoryChange,\r\n  categories,\r\n  subOptions,\r\n  arrayOfSubs,\r\n  setArrayOfSubs,\r\n  selectedCategory,\r\n}) => {\r\n  // destructure\r\n  const {\r\n    title,\r\n    description,\r\n    price,\r\n    category,\r\n    subs,\r\n    shipping,\r\n    quantity,\r\n    images,\r\n    colors,\r\n    brands,\r\n    color,\r\n    brand,\r\n  } = values;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label>Title</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          className=\"form-control\"\r\n          value={title}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Description</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          className=\"form-control\"\r\n          value={description}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Price</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"price\"\r\n          className=\"form-control\"\r\n          value={price}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Shipping</label>\r\n        <select\r\n          value={shipping === \"Yes\" ? \"Yes\" : \"No\"}\r\n          name=\"shipping\"\r\n          className=\"form-control\"\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"No\">No</option>\r\n          <option value=\"Yes\">Yes</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Quantity</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"quantity\"\r\n          className=\"form-control\"\r\n          value={quantity}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Color</label>\r\n        <select\r\n          value={color}\r\n          name=\"color\"\r\n          className=\"form-control\"\r\n          onChange={handleChange}\r\n        >\r\n          {colors.map((c) => (\r\n            <option key={c} value={c}>\r\n              {c}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Brand</label>\r\n        <select\r\n          value={brand}\r\n          name=\"brand\"\r\n          className=\"form-control\"\r\n          onChange={handleChange}\r\n        >\r\n          {brands.map((b) => (\r\n            <option key={b} value={b}>\r\n              {b}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Category</label>\r\n        <select\r\n          name=\"category\"\r\n          className=\"form-control\"\r\n          onChange={handleCatagoryChange}\r\n          value={selectedCategory ? selectedCategory : category._id}\r\n        >\r\n          {categories.length > 0 &&\r\n            categories.map((c) => (\r\n              <option key={c._id} value={c._id}>\r\n                {c.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label>Sub Categories</label>\r\n        <Select\r\n          mode=\"multiple\"\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"Please select\"\r\n          value={arrayOfSubs}\r\n          onChange={(value) => setArrayOfSubs(value)}\r\n        >\r\n          {subOptions.length &&\r\n            subOptions.map((s) => (\r\n              <Option key={s._id} value={s._id}>\r\n                {s.name}\r\n              </Option>\r\n            ))}\r\n        </Select>\r\n      </div>\r\n\r\n      <br />\r\n      <button className=\"btn btn-outline-info\">Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductUpdateForm;\r\n","E:\\WEB\\E-commerce\\client\\src\\components\\cards\\ProductCard.js",["375","376","377","378"],"import React, { useState } from \"react\";\r\nimport { Card, Tooltip } from \"antd\";\r\nimport laptop from \"../../Images/laptop.jpg\";\r\nimport { EyeOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { showAverage } from \"../../functions/rating\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst { Meta } = Card;\r\n\r\nconst ProductCard = ({ product }) => {\r\n  const [tooltip, setTooltip] = useState(\"Click to add\");\r\n\r\n  //! redux\r\n  const { user, cart } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddtoCart = () => {\r\n    // create cart array\r\n    let cart = [];\r\n    if (typeof window !== \"undefined\") {\r\n      // if cart is in localstorage Get it\r\n      if (localStorage.getItem(\"cart\")) {\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n      // push new product to cart\r\n      cart.push({\r\n        ...product,\r\n        count: 1,\r\n      });\r\n      // remove duplicates\r\n      let unique = _.uniqWith(cart, _.isEqual);\r\n\r\n      // save to local storage\r\n      console.log(\"unique\", unique);\r\n      localStorage.setItem(\"cart\", JSON.stringify(unique));\r\n\r\n      // show tooltip\r\n      setTooltip(\"Added\");\r\n\r\n      // add to redux state\r\n\r\n      dispatch({\r\n        type: \"ADD_TO_CART\",\r\n        payload: unique,\r\n      });\r\n      // show cart items in side drawer\r\n      dispatch({\r\n        type: \"SET_VISIBLE\",\r\n        payload: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  // destructure\r\n  const { title, description, images, slug, price } = product;\r\n  return (\r\n    <>\r\n      {product && product.ratings && product.ratings.length > 0 ? (\r\n        showAverage(product)\r\n      ) : (\r\n        <div className=\"text-center pt-1 pb-3\">No Rating Yet</div>\r\n      )}\r\n\r\n      <Card\r\n        cover={\r\n          <img\r\n            src={images && images.length ? images[0].url : laptop}\r\n            style={{ height: \"210px\", objectFit: \"cover\" }}\r\n            className=\"p-1\"\r\n          />\r\n        }\r\n        actions={[\r\n          <Link to={`/product/${slug}`}>\r\n            <EyeOutlined className=\"text-warning\" /> <br /> View Product\r\n          </Link>,\r\n          <Tooltip title={tooltip}>\r\n            <a onClick={handleAddtoCart} disabled={product.quantity < 1}>\r\n              <ShoppingCartOutlined className=\"text-danger\" /> <br />\r\n              {product.quantity < 1 ? \"Out of stock\" : \"Add to Cart\"}\r\n            </a>\r\n          </Tooltip>,\r\n        ]}\r\n      >\r\n        <Meta\r\n          title={`${title}- ₹${price}`}\r\n          description={`${description && description.substring(0, 40)}...`}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","E:\\WEB\\E-commerce\\client\\src\\components\\cards\\Jumbotron.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\cards\\LoadingCard.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\home\\NewArrivals.js",["379"],"import { Pagination } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getProducts, getProductsCount } from \"../../functions/product\";\r\nimport LoadingCard from \"../cards/LoadingCard\";\r\nimport ProductCard from \"../cards/ProductCard\";\r\n\r\nconst NewArrivals = () => {\r\n  const [products, setProducts] = useState([]); // states are for storing data\r\n  const [loading, setLoading] = useState(false);\r\n  const [productsCount, setProductsCount] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    // useEffect runs when the page loads\r\n    loadAllProducts(); // this function runs when the page loads\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    getProductsCount().then((res) => setProductsCount(res.data));\r\n  }, []);\r\n\r\n  const loadAllProducts = () => {\r\n    // it is a function which gets all the products from the backend\r\n    setLoading(true);\r\n    // sort,order,limit\r\n    getProducts(\"createdAt\", \"desc\", page).then((res) => {\r\n      // getProductbycount is a functions in products page which gets data from backend\r\n      setProducts(res.data); // recieved data is put in the setProducts state\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        {loading ? (\r\n          <LoadingCard count={3} />\r\n        ) : (\r\n          <div className=\"row\">\r\n            {products.map((\r\n              product //* map is used to loop through the products\r\n            ) => (\r\n              <div key={product._id} className=\"col-md-4\">\r\n                <ProductCard product={product} />{\" \"}\r\n                {/* Product card is a component which forms a card like design it is taken from ant design*/}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <nav className=\"col-md-4 offset-md-4 text-center pt-5 p-3\">\r\n          <Pagination\r\n            current={page}\r\n            total={(productsCount / 3) * 10}\r\n            onChange={(value) => setPage(value)}\r\n          />\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewArrivals;\r\n","E:\\WEB\\E-commerce\\client\\src\\components\\home\\BestSellers.js",["380"],"import { Pagination } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getProducts, getProductsCount } from \"../../functions/product\";\r\nimport LoadingCard from \"../cards/LoadingCard\";\r\nimport ProductCard from \"../cards/ProductCard\";\r\n\r\nconst BestSellers = () => {\r\n  const [products, setProducts] = useState([]); // states are for storing data\r\n  const [loading, setLoading] = useState(false);\r\n  const [productsCount, setProductsCount] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    // useEffect runs when the page loads\r\n    loadAllProducts(); // this function runs when the page loads\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    getProductsCount().then((res) => setProductsCount(res.data));\r\n  }, []);\r\n\r\n  const loadAllProducts = () => {\r\n    // it is a function which gets all the products from the backend\r\n    setLoading(true);\r\n    // sort,order,limit\r\n    getProducts(\"sold\", \"desc\", page).then((res) => {\r\n      // getProductbycount is a functions in products page which gets data from backend\r\n      setProducts(res.data); // recieved data is put in the setProducts state\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        {loading ? (\r\n          <LoadingCard count={3} />\r\n        ) : (\r\n          <div className=\"row\">\r\n            {products.map((\r\n              product //* map is used to loop through the products\r\n            ) => (\r\n              <div key={product._id} className=\"col-md-4\">\r\n                <ProductCard product={product} />{\" \"}\r\n                {/* Product card is a component which forms a card like design it is taken from ant design*/}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"row\">\r\n        <nav className=\"col-md-4 offset-md-4 text-center pt-5 p-3\">\r\n          <Pagination\r\n            current={page}\r\n            total={(productsCount / 3) * 10}\r\n            onChange={(value) => setPage(value)}\r\n          />\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BestSellers;\r\n","E:\\WEB\\E-commerce\\client\\src\\admin\\product\\Product.js",["381","382"],"import React, { useEffect, useState } from \"react\";\r\nimport { getProduct, productStar, getRelated } from \"../../functions/product\";\r\nimport SingleProduct from \"../../components/cards/SingleProduct\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProductCard from \"../../components/cards/ProductCard\";\r\n\r\nconst Product = ({ match }) => {\r\n  const [product, setProduct] = useState({});\r\n  const [related, setRelated] = useState([]);\r\n  const [star, setStar] = useState(0);\r\n\r\n  //redux\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  const { slug } = match.params;\r\n\r\n  useEffect(() => {\r\n    loadSingleProduct();\r\n  }, [slug]);\r\n\r\n  useEffect(() => {\r\n    if (product.ratings && user) {\r\n      let existingRatingObject = product.ratings.find(\r\n        (ele) => ele.postedBy.toString() === user._id.toString()\r\n      );\r\n      existingRatingObject && setStar(existingRatingObject.star); // current users star\r\n    }\r\n  });\r\n\r\n  const loadSingleProduct = () => {\r\n    getProduct(slug).then((res) => {\r\n      setProduct(res.data);\r\n      // load related\r\n\r\n      getRelated(res.data._id).then((res) => setRelated(res.data));\r\n    });\r\n  };\r\n\r\n  const onStarClick = (newRating, name) => {\r\n    setStar(newRating);\r\n    productStar(name, newRating, user.token).then((res) => {\r\n      console.log(\"rating clicked\", res.data);\r\n      loadSingleProduct(); // user will see rating changed in realtime\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row pt-4\">\r\n        <SingleProduct\r\n          product={product}\r\n          onStarClick={onStarClick}\r\n          star={star}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"row \">\r\n        <div className=\"col text-center pt-2 pb-3\">\r\n          <hr />\r\n          <h4>Related Products</h4>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row pb-5\">\r\n        {related.length ? (\r\n          related.map((r) => (\r\n            <div key={r._id} className=\"col-md-4\">\r\n              <ProductCard product={r} />\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"text-center col\">No Products Found</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","E:\\WEB\\E-commerce\\client\\src\\components\\cards\\SingleProduct.js",["383","384","385","386","387"],"import React, { useState } from \"react\";\r\nimport { Card, Tabs, Tooltip } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { HeartOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport Laptop from \"../../Images/laptop.jpg\";\r\nimport ProductListItems from \"./ProductListItems\";\r\nimport StarRating from \"react-star-ratings\";\r\nimport RatingModal from \"../modal/RatingModal\";\r\nimport { showAverage } from \"../../functions/rating\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addToWishlist } from \"../../functions/user\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n// this is children component of product page\r\n\r\nconst SingleProduct = ({ product, onStarClick, star }) => {\r\n  const [tooltip, setTooltip] = useState(\"Click to add\");\r\n\r\n  //! redux\r\n  const { user, cart } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n  // router\r\n  let history = useHistory();\r\n\r\n  const { title, images, description, _id } = product;\r\n  const handleAddtoCart = () => {\r\n    // create cart array\r\n    let cart = [];\r\n    if (typeof window !== \"undefined\") {\r\n      // if cart is in localstorage Get it\r\n      if (localStorage.getItem(\"cart\")) {\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n      // push new product to cart\r\n      cart.push({\r\n        ...product,\r\n        count: 1,\r\n      });\r\n      // remove duplicates\r\n      let unique = _.uniqWith(cart, _.isEqual);\r\n\r\n      // save to local storage\r\n      console.log(\"unique\", unique);\r\n      localStorage.setItem(\"cart\", JSON.stringify(unique));\r\n\r\n      // show tooltip\r\n      setTooltip(\"Added\");\r\n\r\n      // add to redux state\r\n\r\n      dispatch({\r\n        type: \"ADD_TO_CART\",\r\n        payload: unique,\r\n      });\r\n      // show cart items in side drawer\r\n      dispatch({\r\n        type: \"SET_VISIBLE\",\r\n        payload: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddToWishlist = (e) => {\r\n    e.preventDefault();\r\n    addToWishlist(product._id, user.token).then((res) => {\r\n      console.log(\"ADDED TO WISHLIST\", res.data);\r\n      toast.success(\"Added to Wishlist\");\r\n      history.push(\"/user/wishlist\");\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"col-md-7\">\r\n        {images && images.length ? (\r\n          <Carousel showArrows={true} autoPlay infiniteLoop>\r\n            {images && images.map((i) => <img src={i.url} key={i.public_id} />)}\r\n          </Carousel>\r\n        ) : (\r\n          <Card cover={<img src={Laptop} className=\"mb-3 card-image\" />}></Card>\r\n        )}\r\n\r\n        <Tabs type=\"card\">\r\n          <TabPane tab=\"Description\" key=\"1\">\r\n            {description && description}\r\n          </TabPane>\r\n\r\n          <TabPane tab=\"More\" key=\"2\">\r\n            Contact for more info\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n\r\n      <div className=\"col-md-5\">\r\n        <h1 className=\" p-3\">{title}</h1>\r\n\r\n        {product && product.ratings && product.ratings.length > 0 ? (\r\n          showAverage(product)\r\n        ) : (\r\n          <div className=\"text-center pt-1 pb-3\">No Rating Yet</div>\r\n        )}\r\n\r\n        <Card\r\n          actions={[\r\n            <Tooltip title={tooltip}>\r\n              <a onClick={handleAddtoCart}>\r\n                <ShoppingCartOutlined className=\"text-danger\" /> <br /> Add to\r\n                Cart\r\n              </a>\r\n            </Tooltip>,\r\n            <a onClick={handleAddToWishlist}>\r\n              <HeartOutlined className=\"text-info\" /> <br /> Add to Wishlist\r\n            </a>,\r\n            <RatingModal>\r\n              <StarRating\r\n                name={_id}\r\n                numberOfStars={5}\r\n                rating={star}\r\n                changeRating={onStarClick}\r\n                isSelectable={true}\r\n                starRatedColor=\"red\"\r\n              />\r\n            </RatingModal>,\r\n          ]}\r\n        >\r\n          <ProductListItems product={product} />\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleProduct;\r\n","E:\\WEB\\E-commerce\\client\\src\\components\\cards\\ProductListItems.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\modal\\RatingModal.js",["388"],"import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { StarOutlined } from \"@ant-design/icons\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst RatingModal = ({ children }) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  let history = useHistory();\r\n  let { slug } = useParams();\r\n\r\n  const handleModal = () => {\r\n    if (user && user.token) {\r\n      setModalVisible(true);\r\n    } else {\r\n      history.push({\r\n        pathname: \"/login\",\r\n        state: { from: `/product/${slug}` },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div onClick={handleModal}>\r\n        <StarOutlined className=\"text-danger\" /> <br />\r\n        {user ? \"Leave Rating\" : \"Login to leave rating\"}\r\n      </div>\r\n      <Modal\r\n        title=\"Leave Your Rating\"\r\n        centered\r\n        visible={modalVisible}\r\n        onOk={() => {\r\n          setModalVisible(false);\r\n          toast.success(\"Thanks for your Review\");\r\n        }}\r\n        onCancel={() => setModalVisible(false)}\r\n      >\r\n        {children}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RatingModal;\r\n","E:\\WEB\\E-commerce\\client\\src\\functions\\rating.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\category\\CategoryList.js",[],"E:\\WEB\\E-commerce\\client\\src\\admin\\category\\CategoryHome.js",["389","390","391"],"import React, { useEffect, useState } from \"react\";\r\nimport { getCategories, getCategory } from \"../../functions/category\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProductCard from \"../../components/cards/ProductCard\";\r\n\r\nconst CategoryHome = ({ match }) => {\r\n  const [category, setCategory] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { slug } = match.params;\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCategory(slug).then((res) => {\r\n      console.log(JSON.stringify(res.data, null, 4));\r\n      setCategory(res.data.category);\r\n      setProducts(res.data.products);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          {loading ? (\r\n            <h4 className=\"text-center p-3 mt-5 mb-5 display-4 jumbotron\">\r\n              Loading...\r\n            </h4>\r\n          ) : (\r\n            <h4\r\n              className=\"text-center p-3 mt-5 mb-5 display-4 jumbotron\r\n            \"\r\n            >\r\n              {products.length} Products in \"{category.name}\" category\r\n            </h4>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        {products.map((p) => (\r\n          <div className=\"col-md-4\" key={p._id}>\r\n            <ProductCard product={p} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryHome;\r\n","E:\\WEB\\E-commerce\\client\\src\\components\\sub\\SubList.js",[],"E:\\WEB\\E-commerce\\client\\src\\admin\\sub\\SubHome.js",["392"],"import React, { useEffect, useState } from \"react\";\r\nimport { getSub } from \"../../functions/sub\";\r\nimport ProductCard from \"../../components/cards/ProductCard\";\r\n\r\nconst SubHome = ({ match }) => {\r\n  const [sub, setSub] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { slug } = match.params;\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getSub(slug).then((res) => {\r\n      console.log(JSON.stringify(res.data, null, 4));\r\n      setSub(res.data.sub);\r\n      setProducts(res.data.products);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          {loading ? (\r\n            <h4 className=\"text-center p-3 mt-5 mb-5 display-4 jumbotron\">\r\n              Loading...\r\n            </h4>\r\n          ) : (\r\n            <h4\r\n              className=\"text-center p-3 mt-5 mb-5 display-4 jumbotron\r\n            \"\r\n            >\r\n              {products.length} Products in \"{sub.name}\" sub category\r\n            </h4>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        {products.map((p) => (\r\n          <div className=\"col-md-4\" key={p._id}>\r\n            <ProductCard product={p} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubHome;\r\n","E:\\WEB\\E-commerce\\client\\src\\reducers\\searchReducer.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\forms\\Search.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\home\\Shop.js",["393","394","395","396","397","398"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getProductByCount,\r\n  fetchProductsByfilter,\r\n} from \"../../functions/product\";\r\nimport { getCategories } from \"../../functions/category\";\r\nimport { getSubs } from \"../../functions/sub\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ProductCard from \"../../components/cards/ProductCard\";\r\nimport { Menu, Slider, Checkbox, Radio } from \"antd\";\r\nimport { DownSquareOutlined, StarOutlined } from \"@ant-design/icons\";\r\nimport Star from \"../forms/Star\";\r\n\r\nconst { SubMenu, ItemGroup } = Menu;\r\n\r\nconst Shop = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [price, setPrice] = useState([0, 0]);\r\n  const [ok, setOk] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [categoryIds, setCategoryIds] = useState([]);\r\n  const [star, setStar] = useState(\"\");\r\n  const [subs, setSubs] = useState([]);\r\n  const [sub, setSub] = useState(\"\");\r\n  const [brands, setBrands] = useState([\r\n    \"Apple\",\r\n    \"Samsung\",\r\n    \"Microsoft\",\r\n    \"Lenovo\",\r\n    \"Asus\",\r\n    \"Acer\",\r\n  ]);\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [colors, setColors] = useState([\r\n    \"Black\",\r\n    \"Brown\",\r\n    \"Silver\",\r\n    \"White\",\r\n    \"Blue\",\r\n    \"Red\",\r\n  ]);\r\n  const [color, setColor] = useState(\"\");\r\n  const [shipping, setShipping] = useState(\"\");\r\n\r\n  let dispatch = useDispatch();\r\n\r\n  let { search } = useSelector((state) => ({ ...state }));\r\n  const { text } = search;\r\n\r\n  useEffect(() => {\r\n    loadAllprodcuts();\r\n    // fetch categories\r\n\r\n    getCategories().then((res) => setCategories(res.data));\r\n\r\n    // fetch subcategories\r\n    getSubs().then((res) => setSubs(res.data));\r\n  }, []);\r\n\r\n  const fetchProducts = (arg) => {\r\n    fetchProductsByfilter(arg).then((res) => {\r\n      setProducts(res.data);\r\n    });\r\n  };\r\n\r\n  //* 1. load products by default on page load\r\n  const loadAllprodcuts = () => {\r\n    getProductByCount(4).then((p) => {\r\n      setProducts(p.data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  //* 2. load products on user search input\r\n  useEffect(() => {\r\n    const delayed = setTimeout(() => {\r\n      fetchProducts({ query: text });\r\n      if (!text) {\r\n        loadAllprodcuts();\r\n      }\r\n    }, 300);\r\n\r\n    return () => clearTimeout(delayed);\r\n    // console.log(\"load products on user search input\", text);\r\n  }, [text]);\r\n\r\n  //* 3. load products on price range\r\n\r\n  useEffect(() => {\r\n    console.log(\"ok to request\");\r\n    fetchProducts({ price });\r\n  }, [ok]);\r\n\r\n  const handleSlider = (value) => {\r\n    dispatch({\r\n      type: \"SEARCH_QUERY\",\r\n      payload: { text: \"\" },\r\n    });\r\n\r\n    //reset\r\n    setCategoryIds([]);\r\n    setPrice(value);\r\n    setStar(\"\");\r\n    setSub(\"\");\r\n    setBrand(\"\");\r\n    setColor(\"\");\r\n    setShipping(\"\");\r\n    setTimeout(() => {\r\n      setOk(!ok);\r\n    }, 300);\r\n  };\r\n\r\n  //* 4.load products based on categories\r\n  //* show categories in list of checkbox\r\n\r\n  const showCategories = () =>\r\n    categories.map((c) => (\r\n      <div key={c._id}>\r\n        <Checkbox\r\n          onChange={handleCheck}\r\n          className=\"pb-2 pl-4 pr-4\"\r\n          value={c._id}\r\n          name=\"category\"\r\n          checked={categoryIds.includes(c._id)}\r\n        >\r\n          {c.name}\r\n        </Checkbox>\r\n        <br />\r\n      </div>\r\n    ));\r\n\r\n  // handle check for categories\r\n\r\n  const handleCheck = (e) => {\r\n    // reset\r\n    dispatch({\r\n      type: \"SEARCH_QUERY\",\r\n      payload: { text: \"\" },\r\n    });\r\n    setPrice([0, 0]);\r\n    setStar(\"\");\r\n    setSub(\"\");\r\n    setColor(\"\");\r\n    setShipping(\"\");\r\n    setBrand(\"\");\r\n    // console.log(e.target.value);\r\n    let inTheState = [...categoryIds];\r\n    let justChecked = e.target.value;\r\n    let foundInTheState = inTheState.indexOf(justChecked);\r\n\r\n    //  indexOf method if not found returns -1 else return index\r\n    if (foundInTheState === -1) {\r\n      inTheState.push(justChecked);\r\n    } else {\r\n      // if found pull out one item from index\r\n      inTheState.splice(foundInTheState, 1);\r\n    }\r\n\r\n    setCategoryIds(inTheState);\r\n    // console.log(inTheState);\r\n    fetchProducts({ category: inTheState });\r\n  };\r\n\r\n  //* 5. Show Products by star Rating\r\n\r\n  const handleStarClick = (num) => {\r\n    // console.log(num);\r\n    dispatch({\r\n      type: \"SEARCH_QUERY\",\r\n      payload: { text: \"\" },\r\n    });\r\n    setPrice([0, 0]);\r\n    setCategoryIds([]);\r\n    setStar(num);\r\n    setSub(\"\");\r\n    setColor(\"\");\r\n    setBrand(\"\");\r\n    setShipping(\"\");\r\n    fetchProducts({ stars: num });\r\n  };\r\n\r\n  const showStars = () => (\r\n    <div className=\"pr-4 pl-4 pb-2\">\r\n      <Star starClick={handleStarClick} numberOfStars={5} />\r\n      <Star starClick={handleStarClick} numberOfStars={4} />\r\n      <Star starClick={handleStarClick} numberOfStars={3} />\r\n      <Star starClick={handleStarClick} numberOfStars={2} />\r\n      <Star starClick={handleStarClick} numberOfStars={1} />\r\n    </div>\r\n  );\r\n\r\n  //* 6 show products by sub category\r\n\r\n  const showSubs = () =>\r\n    subs.map((s) => (\r\n      <div\r\n        key={s._id}\r\n        onClick={() => handleSub(s)}\r\n        className=\"p-1 m-1 badge badge-secondary \"\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        {s.name}\r\n      </div>\r\n    ));\r\n\r\n  const handleSub = (sub) => {\r\n    // console.log(\"sub\", sub);\r\n\r\n    setSub(sub);\r\n    dispatch({\r\n      type: \"SEARCH_QUERY\",\r\n      payload: { text: \"\" },\r\n    });\r\n    setPrice([0, 0]);\r\n    setCategoryIds([]);\r\n    setStar(\"\");\r\n    setColor(\"\");\r\n    setBrand(\"\");\r\n    setShipping(\"\");\r\n    fetchProducts({ sub });\r\n  };\r\n\r\n  //* 7. show products based on brand name\r\n\r\n  const showBrands = () =>\r\n    brands.map((b) => (\r\n      <Radio\r\n        value={b}\r\n        name={b}\r\n        checked={b === brand}\r\n        onChange={handleBrand}\r\n        className=\"pb-1 pl-4 pr-4 form-control \"\r\n      >\r\n        {b}\r\n      </Radio>\r\n    ));\r\n\r\n  const handleBrand = (e) => {\r\n    setSub(\"\");\r\n    dispatch({\r\n      type: \"SEARCH_QUERY\",\r\n      payload: { text: \"\" },\r\n    });\r\n    setPrice([0, 0]);\r\n    setCategoryIds([]);\r\n    setStar(\"\");\r\n    setColor(\"\");\r\n    setBrand(e.target.value);\r\n    setShipping(\"\");\r\n    fetchProducts({ brand: e.target.value });\r\n  };\r\n\r\n  //* 8. Show products based on colors\r\n\r\n  const showColors = () =>\r\n    colors.map((c) => (\r\n      <Radio\r\n        value={c}\r\n        name={c}\r\n        checked={c === color}\r\n        onChange={handleColor}\r\n        className=\"pb-1 pl-4 pr-4 form-control\"\r\n      >\r\n        {c}\r\n      </Radio>\r\n    ));\r\n\r\n  const handleColor = (e) => {\r\n    setSub(\"\");\r\n    dispatch({\r\n      type: \"SEARCH_QUERY\",\r\n      payload: { text: \"\" },\r\n    });\r\n    setPrice([0, 0]);\r\n    setCategoryIds([]);\r\n    setStar(\"\");\r\n    setBrand(\"\");\r\n    setColor(e.target.value);\r\n    setShipping(\"\");\r\n    fetchProducts({ color: e.target.value });\r\n  };\r\n\r\n  //* 9. show products based on shipping\r\n\r\n  const showShipping = () => (\r\n    <>\r\n      <Checkbox\r\n        className=\"pb-2 pl-4 pr-4\"\r\n        onChange={handleShippingchange}\r\n        value=\"Yes\"\r\n        checked={shipping === \"Yes\"}\r\n      />\r\n      Yes\r\n      <Checkbox\r\n        className=\"pb-2 pl-4 pr-4\"\r\n        onChange={handleShippingchange}\r\n        value=\"No\"\r\n        checked={shipping === \"No\"}\r\n      >\r\n        No\r\n      </Checkbox>\r\n    </>\r\n  );\r\n\r\n  const handleShippingchange = (e) => {\r\n    setSub(\"\");\r\n    dispatch({\r\n      type: \"SEARCH_QUERY\",\r\n      payload: { text: \"\" },\r\n    });\r\n    setPrice([0, 0]);\r\n    setCategoryIds([]);\r\n    setStar(\"\");\r\n    setBrand(\"\");\r\n    setColor(\"\");\r\n    setShipping(e.target.value);\r\n    fetchProducts({ shipping: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3 pt-2\">\r\n          <h4>Search / Filter</h4>\r\n          <hr />\r\n\r\n          <Menu\r\n            defaultOpenKeys={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]}\r\n            mode=\"inline\"\r\n          >\r\n            <SubMenu key=\"1\" title={<span className=\"h6\">₹ Price</span>}>\r\n              {/*  Price  */}\r\n              <div>\r\n                <Slider\r\n                  className=\"ml-4 mr-4\"\r\n                  tipFormatter={(v) => `₹${v}`}\r\n                  range\r\n                  value={price}\r\n                  onChange={handleSlider}\r\n                  max=\"100000\"\r\n                />\r\n              </div>\r\n            </SubMenu>\r\n\r\n            {/*   Category  */}\r\n            <SubMenu\r\n              key=\"2\"\r\n              title={\r\n                <span className=\"h6\">\r\n                  {\" \"}\r\n                  <DownSquareOutlined /> Categories\r\n                </span>\r\n              }\r\n            >\r\n              <div style={{ marginTop: \"-10px\" }}>{showCategories()}</div>\r\n            </SubMenu>\r\n\r\n            {/* stars*/}\r\n            <SubMenu\r\n              key=\"3\"\r\n              title={\r\n                <span className=\"h6\">\r\n                  {\" \"}\r\n                  <StarOutlined /> Rating\r\n                </span>\r\n              }\r\n            >\r\n              <div style={{ marginTop: \"-10px\" }}>{showStars()}</div>\r\n            </SubMenu>\r\n\r\n            {/*  Sub Category  */}\r\n            <SubMenu\r\n              key=\"4\"\r\n              title={\r\n                <span className=\"h6\">\r\n                  {\" \"}\r\n                  <DownSquareOutlined /> Sub Categories\r\n                </span>\r\n              }\r\n            >\r\n              <div style={{ marginTop: \"-10px\" }} className=\"pl-4 pr-4\">\r\n                {showSubs()}\r\n              </div>\r\n            </SubMenu>\r\n\r\n            {/*    Brands  */}\r\n            <SubMenu\r\n              key=\"5\"\r\n              title={\r\n                <span className=\"h6\">\r\n                  <DownSquareOutlined /> Brands\r\n                </span>\r\n              }\r\n            >\r\n              <div style={{ marginTop: \"-10px\" }} className=\"pr-5\">\r\n                {showBrands()}\r\n              </div>\r\n            </SubMenu>\r\n\r\n            {/*   Colors     */}\r\n\r\n            <SubMenu\r\n              key=\"6\"\r\n              title={\r\n                <span className=\"h6\">\r\n                  <DownSquareOutlined /> Colors\r\n                </span>\r\n              }\r\n            >\r\n              <div style={{ marginTop: \"-10px\" }} className=\"pr-5\">\r\n                {showColors()}\r\n              </div>\r\n            </SubMenu>\r\n\r\n            {/*   shipping    */}\r\n            <SubMenu\r\n              key=\"7\"\r\n              title={\r\n                <span className=\"h6\">\r\n                  <DownSquareOutlined /> Shipping\r\n                </span>\r\n              }\r\n            >\r\n              <div style={{ marginTop: \"-10px\" }} className=\"pr-5\">\r\n                {showShipping()}\r\n              </div>\r\n            </SubMenu>\r\n          </Menu>\r\n        </div>\r\n\r\n        <div className=\"col-md-9 pt-2\">\r\n          {loading ? (\r\n            <h4 className=\"text-danger\">Loading...</h4>\r\n          ) : (\r\n            <h4 className=\"text-danger\">Products</h4>\r\n          )}\r\n          {products.length < 1 && <p>No products found</p>}\r\n\r\n          <div className=\"row pb-5\">\r\n            {products.map((p) => (\r\n              <div key={p._id} className=\"col-md-4 mt-3\">\r\n                <ProductCard product={p} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","E:\\WEB\\E-commerce\\client\\src\\components\\forms\\Star.js",[],"E:\\WEB\\E-commerce\\client\\src\\reducers\\cartReducer.js",[],"E:\\WEB\\E-commerce\\client\\src\\admin\\product\\Cart.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\cards\\ProductCardInCheckout.js",["399","400","401","402"],"import React from \"react\";\r\nimport ModalImage from \"react-modal-image\";\r\nimport laptop from \"../../Images/laptop.jpg\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  CheckCircleOutlined,\r\n  CloseCircleOutlined,\r\n  CloseOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst ProductCardInCheckout = ({ p }) => {\r\n  const colors = [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\", \"Red\"];\r\n  let dispatch = useDispatch();\r\n\r\n  const handleColorChange = (e) => {\r\n    console.log(\"color change\", e.target.value);\r\n\r\n    let cart = [];\r\n    if (typeof window !== \"undefined\") {\r\n      if (localStorage.getItem(\"cart\")) {\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n      cart.map((product, i) => {\r\n        if (product._id === p._id) {\r\n          cart[i].color = e.target.value;\r\n        }\r\n      });\r\n      //   console.log(\"cart update color\", cart);\r\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n      dispatch({\r\n        type: \"ADD_TO_CART\",\r\n        payload: cart,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleQuantity = (e) => {\r\n    let count = e.target.value < 1 ? 1 : e.target.value;\r\n\r\n    if (count > p.quantity) {\r\n      toast.error(`Available:${p.quantity}`);\r\n      return;\r\n    }\r\n\r\n    let cart = [];\r\n\r\n    if (typeof window !== \"undefined\") {\r\n      if (localStorage.getItem(\"cart\")) {\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n      cart.map((product, i) => {\r\n        if (product._id == p._id) {\r\n          cart[i].count = count;\r\n        }\r\n      });\r\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n      dispatch({\r\n        type: \"ADD_TO_CART\",\r\n        payload: cart,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    // console.log(p._id, \"to remove\");\r\n    let cart = [];\r\n\r\n    if (typeof window !== \"undefined\") {\r\n      if (localStorage.getItem(\"cart\")) {\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n\r\n      cart.map((product, i) => {\r\n        if (product._id === p._id) {\r\n          cart.splice(i, 1);\r\n        }\r\n      });\r\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n      dispatch({\r\n        type: \"ADD_TO_CART\",\r\n        payload: cart,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n        <td>\r\n          <div style={{ width: \"100px\", height: \"auto\" }}>\r\n            {p.images.length ? (\r\n              <ModalImage small={p.images[0].url} large={p.images[0].url} />\r\n            ) : (\r\n              <ModalImage small={laptop} large={laptop} />\r\n            )}\r\n          </div>\r\n        </td>\r\n        <td>{p.title}</td>\r\n        <td>₹{p.price}</td>\r\n        <td>{p.brand}</td>\r\n        <td>\r\n          <select\r\n            onChange={handleColorChange}\r\n            name=\"color\"\r\n            className=\"form-control\"\r\n          >\r\n            {p.color ? (\r\n              <option value={p.color}>{p.color}</option>\r\n            ) : (\r\n              <option>Select</option>\r\n            )}\r\n            {colors\r\n              .filter((c) => c !== p.color)\r\n              .map((c) => (\r\n                <option key={c} value={c}>\r\n                  {c}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            value={p.count}\r\n            onChange={handleQuantity}\r\n          />\r\n        </td>\r\n        <td className=\"text-center\">\r\n          {p.shipping === \"Yes\" ? (\r\n            <CheckCircleOutlined className=\"text-success\" />\r\n          ) : (\r\n            <CloseCircleOutlined className=\"text-danger\" />\r\n          )}\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <CloseOutlined\r\n            onClick={handleRemove}\r\n            className=\"text-danger pointer\"\r\n          />\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default ProductCardInCheckout;\r\n","E:\\WEB\\E-commerce\\client\\src\\reducers\\drawerReducer.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\drawer\\SideDrawer.js",["403","404","405"],"import React from \"react\";\r\nimport { Drawer, Button } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport laptop from \"../../Images/laptop.jpg\";\r\n\r\nconst SideDrawer = () => {\r\n  const dispatch = useDispatch();\r\n  const { drawer, cart } = useSelector((state) => ({ ...state }));\r\n\r\n  const imageStyle = {\r\n    width: \"100%\",\r\n    height: \"50px\",\r\n    objectFit: \"cover\",\r\n  };\r\n  return (\r\n    <Drawer\r\n      className=\"text-center\"\r\n      title={`Cart/${cart.length} Product`}\r\n      placement=\"right\"\r\n      closable={false}\r\n      onClose={() => {\r\n        dispatch({\r\n          type: \"SET_VISIBLE\",\r\n          payload: false,\r\n        });\r\n      }}\r\n      visible={drawer}\r\n    >\r\n      {cart.map((p) => (\r\n        <div key={p._id} className=\"row\">\r\n          <div className=\"col\">\r\n            {p.images[0] ? (\r\n              <>\r\n                <img src={p.images[0].url} style={imageStyle} />\r\n                <p className=\"text-center bg-secondary text-light\">\r\n                  {p.title} * {p.count}\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <img src={laptop} style={imageStyle} />\r\n                <p className=\"text-center bg-secondary text-light\">\r\n                  {p.title} * {p.count}\r\n                </p>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      <Link to=\"/cart\">\r\n        <button\r\n          onClick={() =>\r\n            dispatch({\r\n              type: \"SET_VISIBLE\",\r\n              payload: false,\r\n            })\r\n          }\r\n          className=\"text-center btn btn-primary btn-raised btn-block\"\r\n        >\r\n          Go to Cart\r\n        </button>\r\n      </Link>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","E:\\WEB\\E-commerce\\client\\src\\admin\\product\\Checkout.js",["406"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getUserCart,\r\n  emptyUserCart,\r\n  saveUserAddress,\r\n  applyCoupan,\r\n  createCashOrderForUser,\r\n} from \"../../functions/user\";\r\nimport { toast } from \"react-toastify\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nconst Checkout = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [addressSaved, setAddressSaved] = useState(false);\r\n  const [coupan, setCoupan] = useState(\"\");\r\n  // discount price\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState(0);\r\n  const [discountError, setDiscountError] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { user, COD, coupon } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    getUserCart(user.token).then((res) => {\r\n      console.log(\"user cart res\", JSON.stringify(res.data, null, 4));\r\n      setProducts(res.data.products);\r\n      setTotal(res.data.cartTotal);\r\n    });\r\n  }, []);\r\n\r\n  const emptyCart = () => {\r\n    // remove from local storage\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.removeItem(\"cart\");\r\n    }\r\n    // remove from redux\r\n    dispatch({\r\n      type: \"ADD_TO_CART\",\r\n      payload: [],\r\n    });\r\n    // remove from backend\r\n    emptyUserCart(user.token).then((res) => {\r\n      setProducts([]);\r\n      setTotal(0);\r\n      setTotalAfterDiscount(0);\r\n      setCoupan(\"\");\r\n      toast.success(\"Cart is empty. Continue Shopping.\");\r\n    });\r\n  };\r\n\r\n  const saveAddressToDb = () => {\r\n    saveUserAddress(user.token, address).then((res) => {\r\n      if (res.data.ok) {\r\n        setAddressSaved(true);\r\n        toast.success(\"Address Saved\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const applyDiscountCoupan = () => {\r\n    console.log(\"send coupan to backend\", coupan);\r\n    // applycoupon\r\n\r\n    applyCoupan(user.token, coupan).then((res) => {\r\n      console.log(\"Res on coupan applied\", res.data);\r\n      if (res.data) {\r\n        setTotalAfterDiscount(res.data);\r\n        // update redux coupan applied t/f\r\n        dispatch({\r\n          type: \"COUPAN_APPLIED\",\r\n          payload: true,\r\n        });\r\n      }\r\n      if (res.data.err) {\r\n        setDiscountError(res.data.err);\r\n        // update redux coupan applied t/f\r\n        dispatch({\r\n          type: \"COUPAN_APPLIED\",\r\n          payload: false,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const showAddress = () => (\r\n    <>\r\n      <ReactQuill theme=\"snow\" value={address} onChange={setAddress} />\r\n      <button className=\"btn btn-primary mt-2\" onClick={saveAddressToDb}>\r\n        Save\r\n      </button>\r\n    </>\r\n  );\r\n\r\n  const showProductSummary = () =>\r\n    products.map((p, i) => (\r\n      <div key={i}>\r\n        <p>\r\n          {p.product.title} ({p.color}) * {p.count} ={\" \"}\r\n          {p.product.price * p.count}\r\n        </p>\r\n      </div>\r\n    ));\r\n\r\n  const showApplyCoupan = () => (\r\n    <>\r\n      <input\r\n        value={coupan}\r\n        type=\"text\"\r\n        onChange={(e) => {\r\n          setCoupan(e.target.value);\r\n          setDiscountError(\"\");\r\n        }}\r\n        className=\"form-control\"\r\n      />\r\n      <button onClick={applyDiscountCoupan} className=\"btn btn-primary mt-2\">\r\n        Apply\r\n      </button>\r\n    </>\r\n  );\r\n\r\n  const createCashOrder = () => {\r\n    createCashOrderForUser(user.token, COD, coupon).then((res) => {\r\n      console.log(\"user cash order created res\", res);\r\n      // empty cart from redux , local stoarage ,reset coupon ,reset COD ,redirect\r\n\r\n      if (res.data.ok) {\r\n        // empty local storage\r\n        if (typeof window !== \"undefined\") localStorage.removeItem(\"cart\");\r\n        // empty redux cart\r\n        dispatch({\r\n          type: \"ADD_TO_CART\",\r\n          payload: [],\r\n        });\r\n        // empty redux coupon\r\n        dispatch({\r\n          type: \"COUPON_APPLIED\",\r\n          payload: false,\r\n        });\r\n        // empty redux cod\r\n        dispatch({\r\n          type: \"COD\",\r\n          payload: false,\r\n        });\r\n        // empty cart from backend\r\n        emptyUserCart(user.token);\r\n        // redirect\r\n\r\n        setTimeout(() => {\r\n          history.push(\"/user/history\");\r\n        }, 1000);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6\">\r\n        <h4>Delivery Address</h4>\r\n        <br />\r\n        <br />\r\n        {showAddress()}\r\n        <hr />\r\n        <h4>Got Coupon ?</h4>\r\n        <br />\r\n        {showApplyCoupan()}\r\n        <br />\r\n        {discountError && <p className=\"bg-danger p-2\">{discountError}</p>}\r\n      </div>\r\n\r\n      <div className=\"col-md-6\">\r\n        <h4>Order Summary</h4>\r\n        <hr />\r\n        <p>Products {products.length}</p>\r\n        <hr />\r\n        {showProductSummary()}\r\n        <hr />\r\n        <p>Cart Total: {total}</p>\r\n\r\n        {totalAfterDiscount > 0 && (\r\n          <p className=\"bg-success p-2\">\r\n            Coupon Applied: Total Payable: ₹{totalAfterDiscount}\r\n          </p>\r\n        )}\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            {COD ? (\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                disabled={!addressSaved || !products.length}\r\n                onClick={createCashOrder}\r\n              >\r\n                Place Order\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                disabled={!addressSaved || !products.length}\r\n                onClick={() => history.push(\"/payment\")}\r\n              >\r\n                Place Order\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"col-md-6\">\r\n            <button\r\n              disabled={!products.length}\r\n              onClick={emptyCart}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Empty Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","E:\\WEB\\E-commerce\\client\\src\\functions\\user.js",[],"E:\\WEB\\E-commerce\\client\\src\\admin\\coupan\\CreateCoupanPage.js",["407"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { getCoupans, removeCoupan, createCoupan } from \"../../functions/coupan\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport AdminNav from \"../../components/routes/Nav/AdminNav\";\r\n\r\nconst CreateCoupanPage = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [expiry, setExpiry] = useState(\"\");\r\n  const [discount, setDiscount] = useState(\"\");\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [coupans, setCoupans] = useState([]);\r\n\r\n  //redux\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadAllCoupans();\r\n  }, []);\r\n\r\n  const loadAllCoupans = () => getCoupans().then((res) => setCoupans(res.data));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    // console.table(name, expiry, discount);\r\n    createCoupan({ name, expiry, discount }, user.token)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        loadAllCoupans();\r\n        setName(\"\");\r\n        setDiscount(\"\");\r\n        setExpiry(\"\");\r\n        toast.success(`\"${res.data.name}\" is created`);\r\n      })\r\n      .catch((err) => console.log(\"create coupan err\", err));\r\n  };\r\n\r\n  const handleRemove = (coupanId) => {\r\n    if (window.confirm(\"Delete ?\")) {\r\n      setLoading(true);\r\n      removeCoupan(coupanId, user.token)\r\n        .then((res) => {\r\n          loadAllCoupans();\r\n          setLoading(false);\r\n          toast.error(`Coupan\"${res.data.name}\" deleted`);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n        <div className=\"col-md-10\">\r\n          {loading ? (\r\n            <h4 className=\"text-danger\">Loading...</h4>\r\n          ) : (\r\n            <h4>Coupon</h4>\r\n          )}\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-muted\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                value={name}\r\n                autoFocus\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"text-muted\">Discount %</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => setDiscount(e.target.value)}\r\n                value={discount}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"text-muted\">Expiry</label>\r\n              <br />\r\n              <DatePicker\r\n                className=\"form-control\"\r\n                selected={new Date()}\r\n                value={expiry}\r\n                onChange={(date) => setExpiry(date)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Save</button>\r\n          </form>\r\n\r\n          <br />\r\n\r\n          <h4>{coupans.length} Coupons</h4>\r\n\r\n          <table className=\"table table-bordered\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Expiry</th>\r\n                <th scope=\"col\">Discount</th>\r\n                <th scope=\"col\">Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {coupans.map((c) => (\r\n                <tr key={c._id}>\r\n                  <td>{c.name}</td>\r\n                  <td>{new Date(c.expiry).toLocaleDateString()}</td>\r\n                  <td>{c.discount}%</td>\r\n                  <td>\r\n                    <DeleteOutlined\r\n                      onClick={() => handleRemove(c._id)}\r\n                      className=\"text-danger pointer\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateCoupanPage;\r\n","E:\\WEB\\E-commerce\\client\\src\\functions\\coupan.js",[],"E:\\WEB\\E-commerce\\client\\src\\reducers\\couponReducer.js",[],"E:\\WEB\\E-commerce\\client\\src\\Payment.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\StripeCheckout.js",["408","409"],"import React, { useEffect, useState } from \"react\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createPaymentIntent } from \"../functions/stripe\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"antd\";\r\nimport { DollarOutlined, CheckOutlined } from \"@ant-design/icons\";\r\nimport Laptop from \"../Images/laptop.jpg\";\r\nimport { createOrder, emptyUserCart } from \"../functions/user\";\r\nconst StripeCheckout = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const { user, coupon } = useSelector((state) => ({ ...state }));\r\n\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState(\"\");\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState(0);\r\n  const [payable, setPayable] = useState(0);\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  useEffect(() => {\r\n    createPaymentIntent(user.token, coupon).then((res) => {\r\n      console.log(\"create payment intent\", res.data);\r\n      setClientSecret(res.data.clientSecret);\r\n      // additional response recieved on successful payment\r\n      setCartTotal(res.data.cartTotal);\r\n      setTotalAfterDiscount(res.data.totalAfterDiscount);\r\n      setPayable(res.data.payable);\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setProcessing(true);\r\n\r\n    const payload = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          name: e.target.name.value,\r\n        },\r\n      },\r\n    });\r\n\r\n    if (payload.error) {\r\n      setError(`Payment failed ${payload.error.message}`);\r\n      setProcessing(false);\r\n    } else {\r\n      // here you get result after successful payment\r\n      // create order and save in database for admin in process\r\n      createOrder(payload, user.token).then((res) => {\r\n        if (res.data.ok) {\r\n          // empty cart from local storage\r\n          if (typeof window !== \"undefined\") localStorage.removeItem(\"cart\");\r\n\r\n          // empty cart from redux\r\n\r\n          dispatch({\r\n            type: \"ADD_TO_CART\",\r\n            payload: [],\r\n          });\r\n          // reset coupon to false\r\n          dispatch({\r\n            type: \"COUPON_APPLIED\",\r\n            payload: false,\r\n          });\r\n          // empty cart from database\r\n          emptyUserCart(user.token);\r\n        }\r\n      });\r\n      // empty user cart from redux store and local storage\r\n\r\n      console.log(JSON.stringify(payload, null, 4));\r\n      setError(null);\r\n      setProcessing(false);\r\n      setSucceeded(true);\r\n    }\r\n  };\r\n\r\n  const handleChange = async (e) => {\r\n    // listen for changes in the card element\r\n    // and display any errors as customer type their card details\r\n\r\n    setDisabled(e.empty); // display pay button if errors\r\n    setError(e.error ? e.error.message : \"\"); // show error message\r\n  };\r\n\r\n  const cartStyle = {\r\n    style: {\r\n      base: {\r\n        color: \"#32325d\",\r\n        fontFamily: \"Arial, sans-serif\",\r\n        fontSmoothing: \"antialiased\",\r\n        fontSize: \"16px\",\r\n        \"::placeholder\": {\r\n          color: \"#32325d\",\r\n        },\r\n      },\r\n      invalid: {\r\n        color: \"#fa755a\",\r\n        iconColor: \"#fa755a\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!succeeded && (\r\n        <div>\r\n          {coupon && totalAfterDiscount !== undefined ? (\r\n            <p className=\"alert alert-success\">{`Total after discount : ₹${totalAfterDiscount}`}</p>\r\n          ) : (\r\n            <p className=\"alert alert-danger\">No Coupon Applied</p>\r\n          )}\r\n        </div>\r\n      )}\r\n      <div className=\"text-center pb-5\">\r\n        <Card\r\n          cover={\r\n            <img\r\n              src={Laptop}\r\n              style={{\r\n                height: \"200px\",\r\n                objectFit: \"cover\",\r\n                marginBottom: \"-50px\",\r\n              }}\r\n            ></img>\r\n          }\r\n          actions={[\r\n            <>\r\n              <DollarOutlined className=\"text-info\" /> <br /> Total : ₹\r\n              {cartTotal}\r\n            </>,\r\n\r\n            <>\r\n              <CheckOutlined className=\"text-info\" /> <br /> Total Payable :₹\r\n              {(payable / 100).toFixed(2)}\r\n            </>,\r\n          ]}\r\n        />\r\n      </div>\r\n\r\n      <form id=\"payment-form\" className=\"stripe-form\" onSubmit={handleSubmit}>\r\n        <CardElement\r\n          id=\"card-element\"\r\n          options={cartStyle}\r\n          onChange={handleChange}\r\n        />\r\n        <button\r\n          className=\"stripe-button \"\r\n          disabled={processing || disabled || succeeded}\r\n        >\r\n          <span id=\"button-text\">\r\n            {processing ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay\"}\r\n          </span>\r\n        </button>\r\n        <br />\r\n        {error && (\r\n          <div className=\"card-error\" role=\"alert\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        <br />\r\n        <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\r\n          Payment Successful.{\" \"}\r\n          <Link to=\"/user/history\">Check your purchase history</Link>{\" \"}\r\n        </p>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StripeCheckout;\r\n","E:\\WEB\\E-commerce\\client\\src\\functions\\stripe.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\cards\\ShowPaymentInfo.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\order\\Invoice.js",["410"],"import React from \"react\";\r\nimport { Document, Page, Text, StyleSheet } from \"@react-pdf/renderer\";\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  DataTableCell,\r\n} from \"@david.kucsai/react-pdf-table\";\r\n\r\nconst Invoice = ({ order }) => (\r\n  <Document>\r\n    <Page style={styles.body}>\r\n      <Text style={styles.header} fixed>\r\n        ~ {new Date().toLocaleString()} ~\r\n      </Text>\r\n      <Text style={styles.title}>Order Invoice</Text>\r\n      <Text style={styles.author}>React Redux Ecommerce</Text>\r\n      <Text style={styles.subtitle}>Order Summary</Text>\r\n\r\n      <Table>\r\n        <TableBody>\r\n          <TableCell>Title</TableCell>\r\n          <TableCell>Price</TableCell>\r\n          <TableCell>Quantity</TableCell>\r\n          <TableCell>Brand</TableCell>\r\n          <TableCell>Color</TableCell>\r\n        </TableBody>\r\n      </Table>\r\n\r\n      <Table data={order.products}>\r\n        <TableBody>\r\n          <DataTableCell getContent={(x) => x.product.title} />\r\n          <DataTableCell getContent={(x) => `$${x.product.price}`} />\r\n          <DataTableCell getContent={(x) => x.count} />\r\n          <DataTableCell getContent={(x) => x.product.brand} />\r\n          <DataTableCell getContent={(x) => x.product.color} />\r\n        </TableBody>\r\n      </Table>\r\n\r\n      <Text style={styles.text}>\r\n        <Text>\r\n          Date: {\"               \"}\r\n          {new Date(order.paymentIntent.created * 1000).toLocaleString()}\r\n        </Text>\r\n        {\"\\n\"}\r\n        <Text>\r\n          Order Id: {\"         \"}\r\n          {order.paymentIntent.id}\r\n        </Text>\r\n        {\"\\n\"}\r\n        <Text>\r\n          Order Status: {\"  \"}\r\n          {order.orderStatus}\r\n        </Text>\r\n        {\"\\n\"}\r\n        <Text>\r\n          Total Paid: {\"       \"}\r\n          {order.paymentIntent.amount}\r\n        </Text>\r\n      </Text>\r\n\r\n      <Text style={styles.footer}> ~ Thank you for shopping with us ~ </Text>\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    textAlign: \"center\",\r\n  },\r\n  author: {\r\n    fontSize: 12,\r\n    textAlign: \"center\",\r\n    marginBottom: 40,\r\n  },\r\n  subtitle: {\r\n    fontSize: 18,\r\n    margin: 12,\r\n  },\r\n  text: {\r\n    margin: 12,\r\n    fontSize: 14,\r\n    textAlign: \"justify\",\r\n  },\r\n  image: {\r\n    marginVertical: 15,\r\n    marginHorizontal: 100,\r\n  },\r\n  header: {\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  footer: {\r\n    padding: \"100px\",\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  pageNumber: {\r\n    position: \"absolute\",\r\n    fontSize: 12,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n});\r\n\r\nexport default Invoice;\r\n","E:\\WEB\\E-commerce\\client\\src\\functions\\admin.js",[],"E:\\WEB\\E-commerce\\client\\src\\components\\order\\Orders.js",[],"E:\\WEB\\E-commerce\\client\\src\\reducers\\CODReducer.js",[],{"ruleId":"411","replacedBy":"412"},{"ruleId":"413","replacedBy":"414"},{"ruleId":"415","severity":1,"message":"416","line":9,"column":3,"nodeType":"417","messageId":"418","endLine":9,"endColumn":15},{"ruleId":"415","severity":1,"message":"419","line":3,"column":23,"nodeType":"417","messageId":"418","endLine":3,"endColumn":34},{"ruleId":"415","severity":1,"message":"420","line":5,"column":10,"nodeType":"417","messageId":"418","endLine":5,"endColumn":15},{"ruleId":"415","severity":1,"message":"421","line":9,"column":8,"nodeType":"417","messageId":"418","endLine":9,"endColumn":15},{"ruleId":"422","severity":1,"message":"423","line":17,"column":6,"nodeType":"424","endLine":17,"endColumn":8,"suggestions":"425"},{"ruleId":"415","severity":1,"message":"419","line":4,"column":23,"nodeType":"417","messageId":"418","endLine":4,"endColumn":34},{"ruleId":"422","severity":1,"message":"426","line":14,"column":6,"nodeType":"424","endLine":14,"endColumn":8,"suggestions":"427"},{"ruleId":"415","severity":1,"message":"419","line":3,"column":23,"nodeType":"417","messageId":"418","endLine":3,"endColumn":34},{"ruleId":"422","severity":1,"message":"428","line":13,"column":6,"nodeType":"424","endLine":13,"endColumn":8,"suggestions":"429"},{"ruleId":"430","severity":2,"message":"431","line":8,"column":20,"nodeType":"417","endLine":8,"endColumn":31},{"ruleId":"430","severity":2,"message":"432","line":9,"column":23,"nodeType":"417","endLine":9,"endColumn":31},{"ruleId":"430","severity":2,"message":"433","line":11,"column":3,"nodeType":"417","endLine":11,"endColumn":12},{"ruleId":"434","severity":1,"message":"435","line":65,"column":3,"nodeType":"436","messageId":"437","endLine":67,"endColumn":4},{"ruleId":"434","severity":1,"message":"435","line":69,"column":3,"nodeType":"436","messageId":"437","endLine":71,"endColumn":4},{"ruleId":"422","severity":1,"message":"438","line":15,"column":6,"nodeType":"424","endLine":15,"endColumn":8,"suggestions":"439"},{"ruleId":"415","severity":1,"message":"440","line":10,"column":21,"nodeType":"417","messageId":"418","endLine":10,"endColumn":27},{"ruleId":"434","severity":1,"message":"435","line":67,"column":3,"nodeType":"436","messageId":"437","endLine":69,"endColumn":4},{"ruleId":"434","severity":1,"message":"435","line":71,"column":3,"nodeType":"436","messageId":"437","endLine":73,"endColumn":4},{"ruleId":"415","severity":1,"message":"441","line":1,"column":10,"nodeType":"417","messageId":"418","endLine":1,"endColumn":24},{"ruleId":"415","severity":1,"message":"442","line":1,"column":26,"nodeType":"417","messageId":"418","endLine":1,"endColumn":38},{"ruleId":"415","severity":1,"message":"443","line":4,"column":10,"nodeType":"417","messageId":"418","endLine":4,"endColumn":14},{"ruleId":"415","severity":1,"message":"444","line":7,"column":8,"nodeType":"417","messageId":"418","endLine":7,"endColumn":19},{"ruleId":"415","severity":1,"message":"445","line":10,"column":10,"nodeType":"417","messageId":"418","endLine":10,"endColumn":19},{"ruleId":"415","severity":1,"message":"446","line":10,"column":29,"nodeType":"417","messageId":"418","endLine":10,"endColumn":38},{"ruleId":"415","severity":1,"message":"447","line":18,"column":10,"nodeType":"417","messageId":"418","endLine":18,"endColumn":18},{"ruleId":"415","severity":1,"message":"448","line":18,"column":20,"nodeType":"417","messageId":"418","endLine":18,"endColumn":31},{"ruleId":"422","severity":1,"message":"449","line":25,"column":6,"nodeType":"424","endLine":25,"endColumn":8,"suggestions":"450"},{"ruleId":"422","severity":1,"message":"451","line":37,"column":6,"nodeType":"424","endLine":37,"endColumn":8,"suggestions":"452"},{"ruleId":"415","severity":1,"message":"447","line":21,"column":5,"nodeType":"417","messageId":"418","endLine":21,"endColumn":13},{"ruleId":"415","severity":1,"message":"453","line":23,"column":5,"nodeType":"417","messageId":"418","endLine":23,"endColumn":13},{"ruleId":"415","severity":1,"message":"454","line":25,"column":5,"nodeType":"417","messageId":"418","endLine":25,"endColumn":11},{"ruleId":"415","severity":1,"message":"455","line":28,"column":5,"nodeType":"417","messageId":"418","endLine":28,"endColumn":10},{"ruleId":"415","severity":1,"message":"456","line":29,"column":5,"nodeType":"417","messageId":"418","endLine":29,"endColumn":10},{"ruleId":"457","severity":1,"message":"458","line":17,"column":9,"nodeType":"459","endLine":21,"endColumn":11},{"ruleId":"422","severity":1,"message":"460","line":43,"column":6,"nodeType":"424","endLine":43,"endColumn":8,"suggestions":"461"},{"ruleId":"462","severity":1,"message":"463","line":56,"column":27,"nodeType":"464","messageId":"465","endLine":56,"endColumn":29},{"ruleId":"415","severity":1,"message":"466","line":23,"column":5,"nodeType":"417","messageId":"418","endLine":23,"endColumn":9},{"ruleId":"415","severity":1,"message":"454","line":26,"column":5,"nodeType":"417","messageId":"418","endLine":26,"endColumn":11},{"ruleId":"415","severity":1,"message":"467","line":15,"column":11,"nodeType":"417","messageId":"418","endLine":15,"endColumn":15},{"ruleId":"415","severity":1,"message":"468","line":15,"column":17,"nodeType":"417","messageId":"418","endLine":15,"endColumn":21},{"ruleId":"457","severity":1,"message":"458","line":67,"column":11,"nodeType":"459","endLine":71,"endColumn":13},{"ruleId":"469","severity":1,"message":"470","line":78,"column":13,"nodeType":"459","endLine":78,"endColumn":74},{"ruleId":"422","severity":1,"message":"471","line":16,"column":6,"nodeType":"424","endLine":16,"endColumn":12,"suggestions":"472"},{"ruleId":"422","severity":1,"message":"471","line":16,"column":6,"nodeType":"424","endLine":16,"endColumn":12,"suggestions":"473"},{"ruleId":"422","severity":1,"message":"474","line":19,"column":6,"nodeType":"424","endLine":19,"endColumn":12,"suggestions":"475"},{"ruleId":"422","severity":1,"message":"476","line":21,"column":3,"nodeType":"417","endLine":21,"endColumn":12,"suggestions":"477"},{"ruleId":"415","severity":1,"message":"468","line":25,"column":17,"nodeType":"417","messageId":"418","endLine":25,"endColumn":21},{"ruleId":"457","severity":1,"message":"458","line":81,"column":42,"nodeType":"459","endLine":81,"endColumn":79},{"ruleId":"457","severity":1,"message":"458","line":84,"column":24,"nodeType":"459","endLine":84,"endColumn":72},{"ruleId":"469","severity":1,"message":"470","line":110,"column":15,"nodeType":"459","endLine":110,"endColumn":44},{"ruleId":"469","severity":1,"message":"470","line":115,"column":13,"nodeType":"459","endLine":115,"endColumn":46},{"ruleId":"415","severity":1,"message":"478","line":2,"column":17,"nodeType":"417","messageId":"418","endLine":2,"endColumn":23},{"ruleId":"415","severity":1,"message":"479","line":2,"column":10,"nodeType":"417","messageId":"418","endLine":2,"endColumn":23},{"ruleId":"415","severity":1,"message":"443","line":3,"column":10,"nodeType":"417","messageId":"418","endLine":3,"endColumn":14},{"ruleId":"422","severity":1,"message":"480","line":21,"column":6,"nodeType":"424","endLine":21,"endColumn":8,"suggestions":"481"},{"ruleId":"422","severity":1,"message":"480","line":20,"column":6,"nodeType":"424","endLine":20,"endColumn":8,"suggestions":"482"},{"ruleId":"415","severity":1,"message":"483","line":15,"column":18,"nodeType":"417","messageId":"418","endLine":15,"endColumn":27},{"ruleId":"415","severity":1,"message":"484","line":24,"column":10,"nodeType":"417","messageId":"418","endLine":24,"endColumn":14},{"ruleId":"415","severity":1,"message":"485","line":26,"column":10,"nodeType":"417","messageId":"418","endLine":26,"endColumn":13},{"ruleId":"415","severity":1,"message":"486","line":27,"column":18,"nodeType":"417","messageId":"418","endLine":27,"endColumn":27},{"ruleId":"415","severity":1,"message":"487","line":36,"column":18,"nodeType":"417","messageId":"418","endLine":36,"endColumn":27},{"ruleId":"422","severity":1,"message":"488","line":94,"column":6,"nodeType":"424","endLine":94,"endColumn":10,"suggestions":"489"},{"ruleId":"462","severity":1,"message":"463","line":24,"column":29,"nodeType":"464","messageId":"465","endLine":24,"endColumn":31},{"ruleId":"462","severity":1,"message":"463","line":52,"column":29,"nodeType":"464","messageId":"465","endLine":52,"endColumn":31},{"ruleId":"490","severity":1,"message":"491","line":53,"column":25,"nodeType":"492","messageId":"493","endLine":53,"endColumn":27},{"ruleId":"462","severity":1,"message":"463","line":74,"column":29,"nodeType":"464","messageId":"465","endLine":74,"endColumn":31},{"ruleId":"415","severity":1,"message":"478","line":2,"column":18,"nodeType":"417","messageId":"418","endLine":2,"endColumn":24},{"ruleId":"457","severity":1,"message":"458","line":35,"column":17,"nodeType":"459","endLine":35,"endColumn":65},{"ruleId":"457","severity":1,"message":"458","line":42,"column":17,"nodeType":"459","endLine":42,"endColumn":56},{"ruleId":"422","severity":1,"message":"494","line":32,"column":6,"nodeType":"424","endLine":32,"endColumn":8,"suggestions":"495"},{"ruleId":"415","severity":1,"message":"419","line":2,"column":23,"nodeType":"417","messageId":"418","endLine":2,"endColumn":34},{"ruleId":"422","severity":1,"message":"496","line":36,"column":6,"nodeType":"424","endLine":36,"endColumn":8,"suggestions":"497"},{"ruleId":"457","severity":1,"message":"458","line":126,"column":13,"nodeType":"459","endLine":133,"endColumn":14},{"ruleId":"415","severity":1,"message":"498","line":5,"column":3,"nodeType":"417","messageId":"418","endLine":5,"endColumn":14},"no-native-reassign",["499"],"no-negated-in-lhs",["500"],"no-unused-vars","'ShopOutlined' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'toast' is defined but never used.","'Invoice' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUserOrders'. Either include it or remove the dependency array.","ArrayExpression",["501"],"React Hook useEffect has a missing dependency: 'loadWishlist'. Either include it or remove the dependency array.",["502"],"React Hook useEffect has a missing dependency: 'loadOrders'. Either include it or remove the dependency array.",["503"],"react-hooks/rules-of-hooks","React Hook \"useSelector\" is called in function \"adminRoute\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useState\" is called in function \"adminRoute\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useEffect\" is called in function \"adminRoute\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.",["504"],"'getSub' is defined but never used.","'DeleteOutlined' is defined but never used.","'EditOutlined' is defined but never used.","'Link' is defined but never used.","'LocalSearch' is defined but never used.","'createSub' is defined but never used.","'removeSub' is defined but never used.","'category' is assigned a value but never used.","'setCategory' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadSub'. Either include it or remove the dependency array.",["505"],"React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["506"],"'shipping' is assigned a value but never used.","'images' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["507"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'subs' is assigned a value but never used.","'user' is assigned a value but never used.","'cart' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'loadAllProducts'. Either include it or remove the dependency array.",["508"],["509"],"React Hook useEffect has a missing dependency: 'loadSingleProduct'. Either include it or remove the dependency array.",["510"],"React Hook useEffect contains a call to 'setStar'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [product.ratings, user] as a second argument to the useEffect Hook.",["511"],"'Button' is defined but never used.","'getCategories' is defined but never used.","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["512"],["513"],"'ItemGroup' is assigned a value but never used.","'star' is assigned a value but never used.","'sub' is assigned a value but never used.","'setBrands' is assigned a value but never used.","'setColors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'price'. Either include it or remove the dependency array.",["514"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'user.token'. Either include it or remove the dependency array.",["515"],"React Hook useEffect has missing dependencies: 'coupon' and 'user.token'. Either include them or remove the dependency array.",["516"],"'TableHeader' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"531","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"538","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},"Update the dependencies array to be: [loadUserOrders]",{"range":"547","text":"548"},"Update the dependencies array to be: [loadWishlist]",{"range":"549","text":"550"},"Update the dependencies array to be: [loadOrders]",{"range":"551","text":"552"},"Update the dependencies array to be: [loadCategory]",{"range":"553","text":"554"},"Update the dependencies array to be: [loadSub]",{"range":"555","text":"556"},"Update the dependencies array to be: [loadCategories]",{"range":"557","text":"558"},"Update the dependencies array to be: [loadProduct]",{"range":"559","text":"560"},"Update the dependencies array to be: [loadAllProducts, page]",{"range":"561","text":"562"},{"range":"563","text":"562"},"Update the dependencies array to be: [loadSingleProduct, slug]",{"range":"564","text":"565"},"Add dependencies array: [product.ratings, user]",{"range":"566","text":"567"},"Update the dependencies array to be: [slug]",{"range":"568","text":"569"},{"range":"570","text":"569"},"Update the dependencies array to be: [ok, price]",{"range":"571","text":"572"},"Update the dependencies array to be: [user.token]",{"range":"573","text":"574"},"Update the dependencies array to be: [coupon, user.token]",{"range":"575","text":"576"},[698,700],"[loadUserOrders]",[514,516],"[loadWishlist]",[507,509],"[loadOrders]",[587,589],"[loadCategory]",[1028,1030],"[loadSub]",[1290,1292],"[loadCategories]",[1475,1477],"[loadProduct]",[657,663],"[loadAllProducts, page]",[657,663],[640,646],"[loadSingleProduct, slug]",[940,940],", [product.ratings, user]",[713,715],"[slug]",[616,618],[2570,2574],"[ok, price]",[1140,1142],"[user.token]",[1539,1541],"[coupon, user.token]"]